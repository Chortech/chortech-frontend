// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Navigation should render correctly 1`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <RNCSafeAreaProvider
    onInsetsChange={[Function]}
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
      ]
    }
  >
    <View
      pointerEvents="box-none"
      style={
        Object {
          "zIndex": 1,
        }
      }
    >
      <View
        accessibilityElementsHidden={false}
        importantForAccessibility="auto"
        onLayout={[Function]}
        pointerEvents="box-none"
        style={null}
      >
        <View
          pointerEvents="box-none"
          style={
            Object {
              "bottom": 0,
              "left": 0,
              "opacity": 1,
              "position": "absolute",
              "right": 0,
              "top": 0,
              "zIndex": 0,
            }
          }
        >
          <View
            style={
              Object {
                "backgroundColor": "rgb(255, 255, 255)",
                "borderBottomColor": "rgb(216, 216, 216)",
                "flex": 1,
                "shadowColor": "rgb(216, 216, 216)",
                "shadowOffset": Object {
                  "height": 0.5,
                  "width": 0,
                },
                "shadowOpacity": 0.85,
                "shadowRadius": 0,
              }
            }
          />
        </View>
        <View
          pointerEvents="box-none"
          style={
            Object {
              "height": 64,
              "maxHeight": undefined,
              "minHeight": undefined,
              "opacity": undefined,
              "transform": undefined,
            }
          }
        >
          <View
            pointerEvents="none"
            style={
              Object {
                "height": 20,
              }
            }
          />
          <View
            pointerEvents="box-none"
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "center",
              }
            }
          >
            <View
              pointerEvents="box-none"
              style={
                Object {
                  "marginHorizontal": 16,
                  "opacity": 1,
                }
              }
            >
              <Text
                accessibilityRole="header"
                aria-level="1"
                numberOfLines={1}
                onLayout={[Function]}
                style={
                  Object {
                    "color": "rgb(28, 28, 30)",
                    "fontSize": 17,
                    "fontWeight": "600",
                  }
                }
              >
                MockedScreen
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
    <View
      onLayout={[Function]}
      style={
        Object {
          "flex": 1,
        }
      }
    >
      <View
        pointerEvents="box-none"
        style={
          Object {
            "bottom": 0,
            "left": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
          }
        }
      >
        <View
          collapsable={false}
          style={
            Object {
              "opacity": 1,
            }
          }
        />
        <View
          accessibilityElementsHidden={false}
          closing={false}
          gestureVelocityImpact={0.3}
          importantForAccessibility="auto"
          onClose={[Function]}
          onGestureBegin={[Function]}
          onGestureCanceled={[Function]}
          onGestureEnd={[Function]}
          onOpen={[Function]}
          onTransitionStart={[Function]}
          pointerEvents="box-none"
          style={
            Object {
              "bottom": 0,
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
            }
          }
          transitionSpec={
            Object {
              "close": Object {
                "animation": "spring",
                "config": Object {
                  "damping": 500,
                  "mass": 3,
                  "overshootClamping": true,
                  "restDisplacementThreshold": 10,
                  "restSpeedThreshold": 10,
                  "stiffness": 1000,
                },
              },
              "open": Object {
                "animation": "spring",
                "config": Object {
                  "damping": 500,
                  "mass": 3,
                  "overshootClamping": true,
                  "restDisplacementThreshold": 10,
                  "restSpeedThreshold": 10,
                  "stiffness": 1000,
                },
              },
            }
          }
        >
          <View
            needsOffscreenAlphaCompositing={false}
            pointerEvents="box-none"
            style={
              Object {
                "flex": 1,
              }
            }
          >
            <View
              collapsable={false}
              forwardedRef={[Function]}
              onGestureHandlerEvent={[Function]}
              onGestureHandlerStateChange={[Function]}
              style={
                Object {
                  "flex": 1,
                  "transform": Array [
                    Object {
                      "translateX": 0,
                    },
                    Object {
                      "translateX": 0,
                    },
                  ],
                }
              }
            >
              <View
                pointerEvents="none"
                style={
                  Object {
                    "backgroundColor": "rgb(242, 242, 242)",
                    "bottom": 0,
                    "left": 0,
                    "position": "absolute",
                    "shadowColor": "#000",
                    "shadowOffset": Object {
                      "height": 1,
                      "width": -1,
                    },
                    "shadowOpacity": 0.3,
                    "shadowRadius": 5,
                    "top": 0,
                    "width": 3,
                  }
                }
              />
              <View
                style={
                  Array [
                    Object {
                      "flex": 1,
                      "overflow": "hidden",
                    },
                    Array [
                      Object {
                        "backgroundColor": "rgb(242, 242, 242)",
                      },
                      undefined,
                    ],
                  ]
                }
              >
                <View
                  style={
                    Object {
                      "flex": 1,
                      "flexDirection": "column-reverse",
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "flex": 1,
                      }
                    }
                  >
                    <View
                      style={
                        Object {
                          "backgroundColor": "#1AD927",
                          "flex": 1,
                        }
                      }
                    >
                      <View
                        style={
                          Object {
                            "alignItems": "center",
                            "flex": 1.5,
                            "paddingTop": 10,
                          }
                        }
                      >
                        <Image
                          source={
                            Object {
                              "testUri": "../../../app/assets/images/group-image.jpg",
                            }
                          }
                          style={
                            Object {
                              "borderColor": "#fff",
                              "borderRadius": 50,
                              "borderWidth": 2,
                              "height": 70,
                              "padding": 10,
                              "width": 70,
                            }
                          }
                        />
                        <Text
                          style={
                            Object {
                              "color": "#fff",
                              "fontFamily": "IRANSansWeb_Bold",
                              "fontSize": 20,
                              "padding": 10,
                              "textAlign": "center",
                              "writingDirection": "auto",
                            }
                          }
                        >
                          test
                        </Text>
                      </View>
                      <View
                        forwardedRef={[Function]}
                        style={
                          Object {
                            "backgroundColor": "#fff",
                            "borderTopLeftRadius": 20,
                            "borderTopRightRadius": 20,
                            "flex": 5,
                            "paddingHorizontal": 20,
                            "transform": Array [
                              Object {
                                "translateY": 100,
                              },
                            ],
                          }
                        }
                      >
                        <RCTScrollView
                          ListFooterComponent={
                            <View
                              style={
                                Object {
                                  "backgroundColor": "white",
                                  "flex": 1,
                                  "justifyContent": "flex-end",
                                  "paddingHorizontal": 10,
                                }
                              }
                            >
                              <ForwardRef
                                onPress={[Function]}
                                style={
                                  Object {
                                    "backgroundColor": "#fff",
                                    "borderColor": "red",
                                    "borderRadius": 5,
                                    "borderWidth": 2,
                                    "elevation": 1,
                                    "flexDirection": "row",
                                    "justifyContent": "center",
                                    "margin": 10,
                                    "padding": 10,
                                  }
                                }
                              >
                                <Text
                                  style={
                                    Object {
                                      "alignSelf": "center",
                                      "color": "red",
                                      "fontFamily": "IRANSansWeb_Bold",
                                      "fontSize": 16,
                                      "paddingHorizontal": 10,
                                      "writingDirection": "auto",
                                    }
                                  }
                                >
                                  حذف گروه
                                </Text>
                              </ForwardRef>
                            </View>
                          }
                          data={
                            Array [
                              Object {
                                "category": "سبزی",
                                "description": "گوجه",
                                "id": "1",
                                "participants": Array [],
                                "totalPrice": "10000",
                              },
                              Object {
                                "category": "سبزی",
                                "description": "موز",
                                "id": "2",
                                "participants": Array [],
                                "totalPrice": "12000",
                              },
                              Object {
                                "category": "سبزی",
                                "description": "خیار",
                                "id": "3",
                                "participants": Array [],
                                "totalPrice": "13000",
                              },
                              Object {
                                "category": "سبزی",
                                "description": "آلو",
                                "id": "4",
                                "participants": Array [],
                                "totalPrice": "1000",
                              },
                              Object {
                                "category": "سبزی",
                                "description": "هلو",
                                "id": "5",
                                "participants": Array [],
                                "totalPrice": "4000",
                              },
                              Object {
                                "category": "سبزی",
                                "description": "گردو",
                                "id": "6",
                                "participants": Array [],
                                "totalPrice": "50000",
                              },
                            ]
                          }
                          disableVirtualization={false}
                          extraData={false}
                          getItem={[Function]}
                          getItemCount={[Function]}
                          horizontal={false}
                          initialNumToRender={10}
                          keyExtractor={[Function]}
                          maxToRenderPerBatch={10}
                          onContentSizeChange={[Function]}
                          onEndReachedThreshold={2}
                          onLayout={[Function]}
                          onMomentumScrollEnd={[Function]}
                          onScroll={[Function]}
                          onScrollBeginDrag={[Function]}
                          onScrollEndDrag={[Function]}
                          removeClippedSubviews={false}
                          renderItem={[Function]}
                          scrollEventThrottle={50}
                          showsVerticalScrollIndicator={false}
                          stickyHeaderIndices={Array []}
                          updateCellsBatchingPeriod={50}
                          viewabilityConfigCallbackPairs={Array []}
                          windowSize={21}
                        >
                          <View>
                            <View
                              onLayout={[Function]}
                              style={null}
                            >
                              <View
                                accessible={true}
                                focusable={true}
                                onClick={[Function]}
                                onResponderGrant={[Function]}
                                onResponderMove={[Function]}
                                onResponderRelease={[Function]}
                                onResponderTerminate={[Function]}
                                onResponderTerminationRequest={[Function]}
                                onStartShouldSetResponder={[Function]}
                                style={
                                  Object {
                                    "opacity": 1,
                                  }
                                }
                              >
                                <View
                                  style={
                                    Object {
                                      "borderBottomColor": "#cccccc",
                                      "borderBottomWidth": 1,
                                      "flexDirection": "row-reverse",
                                      "marginTop": 10,
                                      "padding": 15,
                                    }
                                  }
                                >
                                  <Text
                                    style={
                                      Object {
                                        "flex": 1,
                                        "fontFamily": "Dirooz",
                                        "fontSize": 16,
                                        "justifyContent": "flex-start",
                                      }
                                    }
                                  >
                                    گوجه
                                  </Text>
                                  <Text
                                    style={
                                      Object {
                                        "flex": 1,
                                        "fontFamily": "Dirooz",
                                        "fontSize": 16,
                                        "justifyContent": "flex-end",
                                      }
                                    }
                                  >
                                    10000
                                  </Text>
                                </View>
                              </View>
                            </View>
                            <View
                              onLayout={[Function]}
                              style={null}
                            >
                              <View
                                accessible={true}
                                focusable={true}
                                onClick={[Function]}
                                onResponderGrant={[Function]}
                                onResponderMove={[Function]}
                                onResponderRelease={[Function]}
                                onResponderTerminate={[Function]}
                                onResponderTerminationRequest={[Function]}
                                onStartShouldSetResponder={[Function]}
                                style={
                                  Object {
                                    "opacity": 1,
                                  }
                                }
                              >
                                <View
                                  style={
                                    Object {
                                      "borderBottomColor": "#cccccc",
                                      "borderBottomWidth": 1,
                                      "flexDirection": "row-reverse",
                                      "marginTop": 10,
                                      "padding": 15,
                                    }
                                  }
                                >
                                  <Text
                                    style={
                                      Object {
                                        "flex": 1,
                                        "fontFamily": "Dirooz",
                                        "fontSize": 16,
                                        "justifyContent": "flex-start",
                                      }
                                    }
                                  >
                                    موز
                                  </Text>
                                  <Text
                                    style={
                                      Object {
                                        "flex": 1,
                                        "fontFamily": "Dirooz",
                                        "fontSize": 16,
                                        "justifyContent": "flex-end",
                                      }
                                    }
                                  >
                                    12000
                                  </Text>
                                </View>
                              </View>
                            </View>
                            <View
                              onLayout={[Function]}
                              style={null}
                            >
                              <View
                                accessible={true}
                                focusable={true}
                                onClick={[Function]}
                                onResponderGrant={[Function]}
                                onResponderMove={[Function]}
                                onResponderRelease={[Function]}
                                onResponderTerminate={[Function]}
                                onResponderTerminationRequest={[Function]}
                                onStartShouldSetResponder={[Function]}
                                style={
                                  Object {
                                    "opacity": 1,
                                  }
                                }
                              >
                                <View
                                  style={
                                    Object {
                                      "borderBottomColor": "#cccccc",
                                      "borderBottomWidth": 1,
                                      "flexDirection": "row-reverse",
                                      "marginTop": 10,
                                      "padding": 15,
                                    }
                                  }
                                >
                                  <Text
                                    style={
                                      Object {
                                        "flex": 1,
                                        "fontFamily": "Dirooz",
                                        "fontSize": 16,
                                        "justifyContent": "flex-start",
                                      }
                                    }
                                  >
                                    خیار
                                  </Text>
                                  <Text
                                    style={
                                      Object {
                                        "flex": 1,
                                        "fontFamily": "Dirooz",
                                        "fontSize": 16,
                                        "justifyContent": "flex-end",
                                      }
                                    }
                                  >
                                    13000
                                  </Text>
                                </View>
                              </View>
                            </View>
                            <View
                              onLayout={[Function]}
                              style={null}
                            >
                              <View
                                accessible={true}
                                focusable={true}
                                onClick={[Function]}
                                onResponderGrant={[Function]}
                                onResponderMove={[Function]}
                                onResponderRelease={[Function]}
                                onResponderTerminate={[Function]}
                                onResponderTerminationRequest={[Function]}
                                onStartShouldSetResponder={[Function]}
                                style={
                                  Object {
                                    "opacity": 1,
                                  }
                                }
                              >
                                <View
                                  style={
                                    Object {
                                      "borderBottomColor": "#cccccc",
                                      "borderBottomWidth": 1,
                                      "flexDirection": "row-reverse",
                                      "marginTop": 10,
                                      "padding": 15,
                                    }
                                  }
                                >
                                  <Text
                                    style={
                                      Object {
                                        "flex": 1,
                                        "fontFamily": "Dirooz",
                                        "fontSize": 16,
                                        "justifyContent": "flex-start",
                                      }
                                    }
                                  >
                                    آلو
                                  </Text>
                                  <Text
                                    style={
                                      Object {
                                        "flex": 1,
                                        "fontFamily": "Dirooz",
                                        "fontSize": 16,
                                        "justifyContent": "flex-end",
                                      }
                                    }
                                  >
                                    1000
                                  </Text>
                                </View>
                              </View>
                            </View>
                            <View
                              onLayout={[Function]}
                              style={null}
                            >
                              <View
                                accessible={true}
                                focusable={true}
                                onClick={[Function]}
                                onResponderGrant={[Function]}
                                onResponderMove={[Function]}
                                onResponderRelease={[Function]}
                                onResponderTerminate={[Function]}
                                onResponderTerminationRequest={[Function]}
                                onStartShouldSetResponder={[Function]}
                                style={
                                  Object {
                                    "opacity": 1,
                                  }
                                }
                              >
                                <View
                                  style={
                                    Object {
                                      "borderBottomColor": "#cccccc",
                                      "borderBottomWidth": 1,
                                      "flexDirection": "row-reverse",
                                      "marginTop": 10,
                                      "padding": 15,
                                    }
                                  }
                                >
                                  <Text
                                    style={
                                      Object {
                                        "flex": 1,
                                        "fontFamily": "Dirooz",
                                        "fontSize": 16,
                                        "justifyContent": "flex-start",
                                      }
                                    }
                                  >
                                    هلو
                                  </Text>
                                  <Text
                                    style={
                                      Object {
                                        "flex": 1,
                                        "fontFamily": "Dirooz",
                                        "fontSize": 16,
                                        "justifyContent": "flex-end",
                                      }
                                    }
                                  >
                                    4000
                                  </Text>
                                </View>
                              </View>
                            </View>
                            <View
                              onLayout={[Function]}
                              style={null}
                            >
                              <View
                                accessible={true}
                                focusable={true}
                                onClick={[Function]}
                                onResponderGrant={[Function]}
                                onResponderMove={[Function]}
                                onResponderRelease={[Function]}
                                onResponderTerminate={[Function]}
                                onResponderTerminationRequest={[Function]}
                                onStartShouldSetResponder={[Function]}
                                style={
                                  Object {
                                    "opacity": 1,
                                  }
                                }
                              >
                                <View
                                  style={
                                    Object {
                                      "borderBottomColor": "#cccccc",
                                      "borderBottomWidth": 1,
                                      "flexDirection": "row-reverse",
                                      "marginTop": 10,
                                      "padding": 15,
                                    }
                                  }
                                >
                                  <Text
                                    style={
                                      Object {
                                        "flex": 1,
                                        "fontFamily": "Dirooz",
                                        "fontSize": 16,
                                        "justifyContent": "flex-start",
                                      }
                                    }
                                  >
                                    گردو
                                  </Text>
                                  <Text
                                    style={
                                      Object {
                                        "flex": 1,
                                        "fontFamily": "Dirooz",
                                        "fontSize": 16,
                                        "justifyContent": "flex-end",
                                      }
                                    }
                                  >
                                    50000
                                  </Text>
                                </View>
                              </View>
                            </View>
                            <View
                              onLayout={[Function]}
                            >
                              <View
                                style={
                                  Object {
                                    "backgroundColor": "white",
                                    "flex": 1,
                                    "justifyContent": "flex-end",
                                    "paddingHorizontal": 10,
                                  }
                                }
                              >
                                <View
                                  accessible={true}
                                  focusable={true}
                                  onClick={[Function]}
                                  onResponderGrant={[Function]}
                                  onResponderMove={[Function]}
                                  onResponderRelease={[Function]}
                                  onResponderTerminate={[Function]}
                                  onResponderTerminationRequest={[Function]}
                                  onStartShouldSetResponder={[Function]}
                                  style={
                                    Object {
                                      "backgroundColor": "#fff",
                                      "borderColor": "red",
                                      "borderRadius": 5,
                                      "borderWidth": 2,
                                      "elevation": 1,
                                      "flexDirection": "row",
                                      "justifyContent": "center",
                                      "margin": 10,
                                      "opacity": 1,
                                      "padding": 10,
                                    }
                                  }
                                >
                                  <Text
                                    style={
                                      Object {
                                        "alignSelf": "center",
                                        "color": "red",
                                        "fontFamily": "IRANSansWeb_Bold",
                                        "fontSize": 16,
                                        "paddingHorizontal": 10,
                                        "writingDirection": "auto",
                                      }
                                    }
                                  >
                                    حذف گروه
                                  </Text>
                                </View>
                              </View>
                            </View>
                          </View>
                        </RCTScrollView>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
  </RNCSafeAreaProvider>
</View>
`;

exports[`Navigation should render correctly 2`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <RNCSafeAreaProvider
    onInsetsChange={[Function]}
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
      ]
    }
  >
    <View
      pointerEvents="box-none"
      style={
        Object {
          "zIndex": 1,
        }
      }
    >
      <View
        accessibilityElementsHidden={false}
        importantForAccessibility="auto"
        onLayout={[Function]}
        pointerEvents="box-none"
        style={null}
      >
        <View
          pointerEvents="box-none"
          style={
            Object {
              "bottom": 0,
              "left": 0,
              "opacity": 1,
              "position": "absolute",
              "right": 0,
              "top": 0,
              "zIndex": 0,
            }
          }
        >
          <View
            style={
              Object {
                "backgroundColor": "rgb(255, 255, 255)",
                "borderBottomColor": "rgb(216, 216, 216)",
                "flex": 1,
                "shadowColor": "rgb(216, 216, 216)",
                "shadowOffset": Object {
                  "height": 0.5,
                  "width": 0,
                },
                "shadowOpacity": 0.85,
                "shadowRadius": 0,
              }
            }
          />
        </View>
        <View
          pointerEvents="box-none"
          style={
            Object {
              "height": 64,
              "maxHeight": undefined,
              "minHeight": undefined,
              "opacity": undefined,
              "transform": undefined,
            }
          }
        >
          <View
            pointerEvents="none"
            style={
              Object {
                "height": 20,
              }
            }
          />
          <View
            pointerEvents="box-none"
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "center",
              }
            }
          >
            <View
              pointerEvents="box-none"
              style={
                Object {
                  "marginHorizontal": 16,
                  "opacity": 1,
                }
              }
            >
              <Text
                accessibilityRole="header"
                aria-level="1"
                numberOfLines={1}
                onLayout={[Function]}
                style={
                  Object {
                    "color": "rgb(28, 28, 30)",
                    "fontSize": 17,
                    "fontWeight": "600",
                  }
                }
              >
                MockedScreen
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
    <View
      onLayout={[Function]}
      style={
        Object {
          "flex": 1,
        }
      }
    >
      <View
        pointerEvents="box-none"
        style={
          Object {
            "bottom": 0,
            "left": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
          }
        }
      >
        <View
          collapsable={false}
          style={
            Object {
              "opacity": 1,
            }
          }
        />
        <View
          accessibilityElementsHidden={false}
          closing={false}
          gestureVelocityImpact={0.3}
          importantForAccessibility="auto"
          onClose={[Function]}
          onGestureBegin={[Function]}
          onGestureCanceled={[Function]}
          onGestureEnd={[Function]}
          onOpen={[Function]}
          onTransitionStart={[Function]}
          pointerEvents="box-none"
          style={
            Object {
              "bottom": 0,
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
            }
          }
          transitionSpec={
            Object {
              "close": Object {
                "animation": "spring",
                "config": Object {
                  "damping": 500,
                  "mass": 3,
                  "overshootClamping": true,
                  "restDisplacementThreshold": 10,
                  "restSpeedThreshold": 10,
                  "stiffness": 1000,
                },
              },
              "open": Object {
                "animation": "spring",
                "config": Object {
                  "damping": 500,
                  "mass": 3,
                  "overshootClamping": true,
                  "restDisplacementThreshold": 10,
                  "restSpeedThreshold": 10,
                  "stiffness": 1000,
                },
              },
            }
          }
        >
          <View
            needsOffscreenAlphaCompositing={false}
            pointerEvents="box-none"
            style={
              Object {
                "flex": 1,
              }
            }
          >
            <View
              collapsable={false}
              forwardedRef={[Function]}
              onGestureHandlerEvent={[Function]}
              onGestureHandlerStateChange={[Function]}
              style={
                Object {
                  "flex": 1,
                  "transform": Array [
                    Object {
                      "translateX": 0,
                    },
                    Object {
                      "translateX": 0,
                    },
                  ],
                }
              }
            >
              <View
                pointerEvents="none"
                style={
                  Object {
                    "backgroundColor": "rgb(242, 242, 242)",
                    "bottom": 0,
                    "left": 0,
                    "position": "absolute",
                    "shadowColor": "#000",
                    "shadowOffset": Object {
                      "height": 1,
                      "width": -1,
                    },
                    "shadowOpacity": 0.3,
                    "shadowRadius": 5,
                    "top": 0,
                    "width": 3,
                  }
                }
              />
              <View
                style={
                  Array [
                    Object {
                      "flex": 1,
                      "overflow": "hidden",
                    },
                    Array [
                      Object {
                        "backgroundColor": "rgb(242, 242, 242)",
                      },
                      undefined,
                    ],
                  ]
                }
              >
                <View
                  style={
                    Object {
                      "flex": 1,
                      "flexDirection": "column-reverse",
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "flex": 1,
                      }
                    }
                  >
                    <View
                      style={
                        Object {
                          "backgroundColor": "#1AD927",
                          "flex": 1,
                        }
                      }
                    >
                      <View
                        forwardedRef={[Function]}
                        style={
                          Object {
                            "backgroundColor": "#fff",
                            "flex": 8,
                            "paddingBottom": 30,
                            "paddingHorizontal": 20,
                            "transform": Array [
                              Object {
                                "translateY": 100,
                              },
                            ],
                          }
                        }
                      >
                        <RCTScrollView
                          data={
                            Array [
                              Object {
                                "id": "0",
                                "name": "Available",
                              },
                              Object {
                                "id": "1",
                                "name": "Ready",
                              },
                              Object {
                                "id": "2",
                                "name": "Started",
                              },
                              Object {
                                "id": "3",
                                "name": "test3",
                              },
                              Object {
                                "id": "4",
                                "name": "test4",
                              },
                              Object {
                                "id": "5",
                                "name": "test5",
                              },
                              Object {
                                "id": "6",
                                "name": "test6",
                              },
                              Object {
                                "id": "7",
                                "name": "test7",
                              },
                              Object {
                                "id": "8",
                                "name": "test8",
                              },
                              Object {
                                "id": "9",
                                "name": "test9",
                              },
                              Object {
                                "id": "10",
                                "name": "test10",
                              },
                              Object {
                                "id": "11",
                                "name": "test11",
                              },
                              Object {
                                "id": "12",
                                "name": "test12",
                              },
                              Object {
                                "id": "13",
                                "name": "test13",
                              },
                              Object {
                                "id": "14",
                                "name": "test14",
                              },
                              Object {
                                "id": "15",
                                "name": "test15",
                              },
                              Object {
                                "id": "16",
                                "name": "test16",
                              },
                              Object {
                                "id": "17",
                                "name": "test17",
                              },
                              Object {
                                "id": "18",
                                "name": "test18",
                              },
                              Object {
                                "id": "19",
                                "name": "test19",
                              },
                              Object {
                                "id": "20",
                                "name": "test20",
                              },
                              Object {
                                "id": "21",
                                "name": "test21",
                              },
                              Object {
                                "id": "22",
                                "name": "test22",
                              },
                              Object {
                                "id": "23",
                                "name": "test23",
                              },
                              Object {
                                "id": "24",
                                "name": "test24",
                              },
                              Object {
                                "id": "25",
                                "name": "test25",
                              },
                              Object {
                                "id": "26",
                                "name": "test26",
                              },
                              Object {
                                "id": "27",
                                "name": "test27",
                              },
                              Object {
                                "id": "28",
                                "name": "test28",
                              },
                              Object {
                                "id": "29",
                                "name": "test29",
                              },
                              Object {
                                "id": "30",
                                "name": "test30",
                              },
                              Object {
                                "id": "31",
                                "name": "test31",
                              },
                              Object {
                                "id": "32",
                                "name": "test32",
                              },
                              Object {
                                "id": "33",
                                "name": "test33",
                              },
                              Object {
                                "id": "34",
                                "name": "test34",
                              },
                              Object {
                                "id": "35",
                                "name": "test35",
                              },
                              Object {
                                "id": "36",
                                "name": "test36",
                              },
                              Object {
                                "id": "37",
                                "name": "test37",
                              },
                              Object {
                                "id": "38",
                                "name": "test38",
                              },
                              Object {
                                "id": "39",
                                "name": "test39",
                              },
                              Object {
                                "id": "40",
                                "name": "test40",
                              },
                              Object {
                                "id": "41",
                                "name": "test41",
                              },
                              Object {
                                "id": "42",
                                "name": "test42",
                              },
                              Object {
                                "id": "43",
                                "name": "test43",
                              },
                              Object {
                                "id": "44",
                                "name": "test44",
                              },
                              Object {
                                "id": "45",
                                "name": "test45",
                              },
                              Object {
                                "id": "46",
                                "name": "test46",
                              },
                              Object {
                                "id": "47",
                                "name": "test47",
                              },
                              Object {
                                "id": "48",
                                "name": "test48",
                              },
                              Object {
                                "id": "49",
                                "name": "test49",
                              },
                              Object {
                                "id": "50",
                                "name": "test50",
                              },
                              Object {
                                "id": "51",
                                "name": "test51",
                              },
                              Object {
                                "id": "52",
                                "name": "test52",
                              },
                              Object {
                                "id": "53",
                                "name": "test53",
                              },
                              Object {
                                "id": "54",
                                "name": "test54",
                              },
                              Object {
                                "id": "55",
                                "name": "test55",
                              },
                              Object {
                                "id": "56",
                                "name": "test56",
                              },
                              Object {
                                "id": "57",
                                "name": "test57",
                              },
                              Object {
                                "id": "58",
                                "name": "test58",
                              },
                              Object {
                                "id": "59",
                                "name": "test59",
                              },
                              Object {
                                "id": "60",
                                "name": "test60",
                              },
                              Object {
                                "id": "61",
                                "name": "test61",
                              },
                              Object {
                                "id": "62",
                                "name": "test62",
                              },
                              Object {
                                "id": "63",
                                "name": "test63",
                              },
                              Object {
                                "id": "64",
                                "name": "test64",
                              },
                              Object {
                                "id": "65",
                                "name": "test65",
                              },
                              Object {
                                "id": "66",
                                "name": "test66",
                              },
                              Object {
                                "id": "67",
                                "name": "test67",
                              },
                              Object {
                                "id": "68",
                                "name": "test68",
                              },
                              Object {
                                "id": "69",
                                "name": "test69",
                              },
                              Object {
                                "id": "70",
                                "name": "test70",
                              },
                              Object {
                                "id": "71",
                                "name": "test71",
                              },
                              Object {
                                "id": "72",
                                "name": "test72",
                              },
                              Object {
                                "id": "73",
                                "name": "test73",
                              },
                              Object {
                                "id": "74",
                                "name": "test74",
                              },
                              Object {
                                "id": "75",
                                "name": "test75",
                              },
                              Object {
                                "id": "76",
                                "name": "test76",
                              },
                              Object {
                                "id": "77",
                                "name": "test77",
                              },
                              Object {
                                "id": "78",
                                "name": "test78",
                              },
                              Object {
                                "id": "79",
                                "name": "test79",
                              },
                              Object {
                                "id": "80",
                                "name": "test80",
                              },
                              Object {
                                "id": "81",
                                "name": "test81",
                              },
                              Object {
                                "id": "82",
                                "name": "test82",
                              },
                              Object {
                                "id": "83",
                                "name": "test83",
                              },
                              Object {
                                "id": "84",
                                "name": "test84",
                              },
                              Object {
                                "id": "85",
                                "name": "test85",
                              },
                              Object {
                                "id": "86",
                                "name": "test86",
                              },
                              Object {
                                "id": "87",
                                "name": "test87",
                              },
                              Object {
                                "id": "88",
                                "name": "test88",
                              },
                              Object {
                                "id": "89",
                                "name": "test89",
                              },
                              Object {
                                "id": "90",
                                "name": "test90",
                              },
                              Object {
                                "id": "91",
                                "name": "test91",
                              },
                              Object {
                                "id": "92",
                                "name": "test92",
                              },
                              Object {
                                "id": "93",
                                "name": "test93",
                              },
                              Object {
                                "id": "94",
                                "name": "test94",
                              },
                              Object {
                                "id": "95",
                                "name": "test95",
                              },
                              Object {
                                "id": "96",
                                "name": "test96",
                              },
                              Object {
                                "id": "97",
                                "name": "test97",
                              },
                              Object {
                                "id": "98",
                                "name": "test98",
                              },
                              Object {
                                "id": "99",
                                "name": "test99",
                              },
                              Object {
                                "id": "100",
                                "name": "test100",
                              },
                              Object {
                                "id": "101",
                                "name": "test101",
                              },
                              Object {
                                "id": "102",
                                "name": "test102",
                              },
                              Object {
                                "id": "103",
                                "name": "test103",
                              },
                              Object {
                                "id": "104",
                                "name": "test104",
                              },
                              Object {
                                "id": "105",
                                "name": "test105",
                              },
                              Object {
                                "id": "106",
                                "name": "test106",
                              },
                              Object {
                                "id": "107",
                                "name": "test107",
                              },
                              Object {
                                "id": "108",
                                "name": "test108",
                              },
                              Object {
                                "id": "109",
                                "name": "test109",
                              },
                              Object {
                                "id": "110",
                                "name": "test110",
                              },
                              Object {
                                "id": "111",
                                "name": "test111",
                              },
                              Object {
                                "id": "112",
                                "name": "test112",
                              },
                              Object {
                                "id": "113",
                                "name": "test113",
                              },
                              Object {
                                "id": "114",
                                "name": "test114",
                              },
                              Object {
                                "id": "115",
                                "name": "test115",
                              },
                              Object {
                                "id": "116",
                                "name": "test116",
                              },
                              Object {
                                "id": "117",
                                "name": "test117",
                              },
                              Object {
                                "id": "118",
                                "name": "test118",
                              },
                              Object {
                                "id": "119",
                                "name": "test119",
                              },
                              Object {
                                "id": "120",
                                "name": "test120",
                              },
                              Object {
                                "id": "121",
                                "name": "test121",
                              },
                              Object {
                                "id": "122",
                                "name": "test122",
                              },
                              Object {
                                "id": "123",
                                "name": "test123",
                              },
                              Object {
                                "id": "124",
                                "name": "test124",
                              },
                              Object {
                                "id": "125",
                                "name": "test125",
                              },
                              Object {
                                "id": "126",
                                "name": "test126",
                              },
                              Object {
                                "id": "127",
                                "name": "test127",
                              },
                              Object {
                                "id": "128",
                                "name": "test128",
                              },
                              Object {
                                "id": "129",
                                "name": "test129",
                              },
                              Object {
                                "id": "130",
                                "name": "test130",
                              },
                              Object {
                                "id": "131",
                                "name": "test131",
                              },
                              Object {
                                "id": "132",
                                "name": "test132",
                              },
                              Object {
                                "id": "133",
                                "name": "test133",
                              },
                              Object {
                                "id": "134",
                                "name": "test134",
                              },
                              Object {
                                "id": "135",
                                "name": "test135",
                              },
                              Object {
                                "id": "136",
                                "name": "test136",
                              },
                              Object {
                                "id": "137",
                                "name": "test137",
                              },
                              Object {
                                "id": "138",
                                "name": "test138",
                              },
                              Object {
                                "id": "139",
                                "name": "test139",
                              },
                              Object {
                                "id": "140",
                                "name": "test140",
                              },
                              Object {
                                "id": "141",
                                "name": "test141",
                              },
                              Object {
                                "id": "142",
                                "name": "test142",
                              },
                              Object {
                                "id": "143",
                                "name": "test143",
                              },
                              Object {
                                "id": "144",
                                "name": "test144",
                              },
                              Object {
                                "id": "145",
                                "name": "test145",
                              },
                              Object {
                                "id": "146",
                                "name": "test146",
                              },
                              Object {
                                "id": "147",
                                "name": "test147",
                              },
                              Object {
                                "id": "148",
                                "name": "test148",
                              },
                              Object {
                                "id": "149",
                                "name": "test149",
                              },
                              Object {
                                "id": "150",
                                "name": "test150",
                              },
                              Object {
                                "id": "151",
                                "name": "test151",
                              },
                              Object {
                                "id": "152",
                                "name": "test152",
                              },
                              Object {
                                "id": "153",
                                "name": "test153",
                              },
                              Object {
                                "id": "154",
                                "name": "test154",
                              },
                              Object {
                                "id": "155",
                                "name": "test155",
                              },
                              Object {
                                "id": "156",
                                "name": "test156",
                              },
                              Object {
                                "id": "157",
                                "name": "test157",
                              },
                              Object {
                                "id": "158",
                                "name": "test158",
                              },
                              Object {
                                "id": "159",
                                "name": "test159",
                              },
                              Object {
                                "id": "160",
                                "name": "test160",
                              },
                              Object {
                                "id": "161",
                                "name": "test161",
                              },
                              Object {
                                "id": "162",
                                "name": "test162",
                              },
                              Object {
                                "id": "163",
                                "name": "test163",
                              },
                              Object {
                                "id": "164",
                                "name": "test164",
                              },
                              Object {
                                "id": "165",
                                "name": "test165",
                              },
                              Object {
                                "id": "166",
                                "name": "test166",
                              },
                              Object {
                                "id": "167",
                                "name": "test167",
                              },
                              Object {
                                "id": "168",
                                "name": "test168",
                              },
                              Object {
                                "id": "169",
                                "name": "test169",
                              },
                              Object {
                                "id": "170",
                                "name": "test170",
                              },
                              Object {
                                "id": "171",
                                "name": "test171",
                              },
                              Object {
                                "id": "172",
                                "name": "test172",
                              },
                              Object {
                                "id": "173",
                                "name": "test173",
                              },
                              Object {
                                "id": "174",
                                "name": "test174",
                              },
                              Object {
                                "id": "175",
                                "name": "test175",
                              },
                              Object {
                                "id": "176",
                                "name": "test176",
                              },
                              Object {
                                "id": "177",
                                "name": "test177",
                              },
                              Object {
                                "id": "178",
                                "name": "test178",
                              },
                              Object {
                                "id": "179",
                                "name": "test179",
                              },
                              Object {
                                "id": "180",
                                "name": "test180",
                              },
                              Object {
                                "id": "181",
                                "name": "test181",
                              },
                              Object {
                                "id": "182",
                                "name": "test182",
                              },
                              Object {
                                "id": "183",
                                "name": "test183",
                              },
                              Object {
                                "id": "184",
                                "name": "test184",
                              },
                              Object {
                                "id": "185",
                                "name": "test185",
                              },
                              Object {
                                "id": "186",
                                "name": "test186",
                              },
                              Object {
                                "id": "187",
                                "name": "test187",
                              },
                              Object {
                                "id": "188",
                                "name": "test188",
                              },
                              Object {
                                "id": "189",
                                "name": "test189",
                              },
                              Object {
                                "id": "190",
                                "name": "test190",
                              },
                              Object {
                                "id": "191",
                                "name": "test191",
                              },
                              Object {
                                "id": "192",
                                "name": "test192",
                              },
                              Object {
                                "id": "193",
                                "name": "test193",
                              },
                              Object {
                                "id": "194",
                                "name": "test194",
                              },
                              Object {
                                "id": "195",
                                "name": "test195",
                              },
                              Object {
                                "id": "196",
                                "name": "test196",
                              },
                              Object {
                                "id": "197",
                                "name": "test197",
                              },
                              Object {
                                "id": "198",
                                "name": "test198",
                              },
                              Object {
                                "id": "199",
                                "name": "test199",
                              },
                              Object {
                                "id": "200",
                                "name": "test200",
                              },
                              Object {
                                "id": "201",
                                "name": "test201",
                              },
                              Object {
                                "id": "202",
                                "name": "test202",
                              },
                              Object {
                                "id": "203",
                                "name": "test203",
                              },
                              Object {
                                "id": "204",
                                "name": "test204",
                              },
                              Object {
                                "id": "205",
                                "name": "test205",
                              },
                              Object {
                                "id": "206",
                                "name": "test206",
                              },
                              Object {
                                "id": "207",
                                "name": "test207",
                              },
                              Object {
                                "id": "208",
                                "name": "test208",
                              },
                              Object {
                                "id": "209",
                                "name": "test209",
                              },
                              Object {
                                "id": "210",
                                "name": "test210",
                              },
                              Object {
                                "id": "211",
                                "name": "test211",
                              },
                              Object {
                                "id": "212",
                                "name": "test212",
                              },
                              Object {
                                "id": "213",
                                "name": "test213",
                              },
                              Object {
                                "id": "214",
                                "name": "test214",
                              },
                              Object {
                                "id": "215",
                                "name": "test215",
                              },
                              Object {
                                "id": "216",
                                "name": "test216",
                              },
                              Object {
                                "id": "217",
                                "name": "test217",
                              },
                              Object {
                                "id": "218",
                                "name": "test218",
                              },
                              Object {
                                "id": "219",
                                "name": "test219",
                              },
                              Object {
                                "id": "220",
                                "name": "test220",
                              },
                              Object {
                                "id": "221",
                                "name": "test221",
                              },
                              Object {
                                "id": "222",
                                "name": "test222",
                              },
                              Object {
                                "id": "223",
                                "name": "test223",
                              },
                              Object {
                                "id": "224",
                                "name": "test224",
                              },
                              Object {
                                "id": "225",
                                "name": "test225",
                              },
                              Object {
                                "id": "226",
                                "name": "test226",
                              },
                              Object {
                                "id": "227",
                                "name": "test227",
                              },
                              Object {
                                "id": "228",
                                "name": "test228",
                              },
                              Object {
                                "id": "229",
                                "name": "test229",
                              },
                              Object {
                                "id": "230",
                                "name": "test230",
                              },
                              Object {
                                "id": "231",
                                "name": "test231",
                              },
                              Object {
                                "id": "232",
                                "name": "test232",
                              },
                              Object {
                                "id": "233",
                                "name": "test233",
                              },
                              Object {
                                "id": "234",
                                "name": "test234",
                              },
                              Object {
                                "id": "235",
                                "name": "test235",
                              },
                              Object {
                                "id": "236",
                                "name": "test236",
                              },
                              Object {
                                "id": "237",
                                "name": "test237",
                              },
                              Object {
                                "id": "238",
                                "name": "test238",
                              },
                              Object {
                                "id": "239",
                                "name": "test239",
                              },
                              Object {
                                "id": "240",
                                "name": "test240",
                              },
                              Object {
                                "id": "241",
                                "name": "test241",
                              },
                              Object {
                                "id": "242",
                                "name": "test242",
                              },
                              Object {
                                "id": "243",
                                "name": "test243",
                              },
                              Object {
                                "id": "244",
                                "name": "test244",
                              },
                              Object {
                                "id": "245",
                                "name": "test245",
                              },
                              Object {
                                "id": "246",
                                "name": "test246",
                              },
                              Object {
                                "id": "247",
                                "name": "test247",
                              },
                              Object {
                                "id": "248",
                                "name": "test248",
                              },
                              Object {
                                "id": "249",
                                "name": "test249",
                              },
                              Object {
                                "id": "250",
                                "name": "test250",
                              },
                              Object {
                                "id": "251",
                                "name": "test251",
                              },
                              Object {
                                "id": "252",
                                "name": "test252",
                              },
                              Object {
                                "id": "253",
                                "name": "test253",
                              },
                              Object {
                                "id": "254",
                                "name": "test254",
                              },
                              Object {
                                "id": "255",
                                "name": "test255",
                              },
                              Object {
                                "id": "256",
                                "name": "test256",
                              },
                              Object {
                                "id": "257",
                                "name": "test257",
                              },
                              Object {
                                "id": "258",
                                "name": "test258",
                              },
                              Object {
                                "id": "259",
                                "name": "test259",
                              },
                              Object {
                                "id": "260",
                                "name": "test260",
                              },
                              Object {
                                "id": "261",
                                "name": "test261",
                              },
                              Object {
                                "id": "262",
                                "name": "test262",
                              },
                              Object {
                                "id": "263",
                                "name": "test263",
                              },
                              Object {
                                "id": "264",
                                "name": "test264",
                              },
                              Object {
                                "id": "265",
                                "name": "test265",
                              },
                              Object {
                                "id": "266",
                                "name": "test266",
                              },
                              Object {
                                "id": "267",
                                "name": "test267",
                              },
                              Object {
                                "id": "268",
                                "name": "test268",
                              },
                              Object {
                                "id": "269",
                                "name": "test269",
                              },
                              Object {
                                "id": "270",
                                "name": "test270",
                              },
                              Object {
                                "id": "271",
                                "name": "test271",
                              },
                              Object {
                                "id": "272",
                                "name": "test272",
                              },
                              Object {
                                "id": "273",
                                "name": "test273",
                              },
                              Object {
                                "id": "274",
                                "name": "test274",
                              },
                              Object {
                                "id": "275",
                                "name": "test275",
                              },
                              Object {
                                "id": "276",
                                "name": "test276",
                              },
                              Object {
                                "id": "277",
                                "name": "test277",
                              },
                              Object {
                                "id": "278",
                                "name": "test278",
                              },
                              Object {
                                "id": "279",
                                "name": "test279",
                              },
                              Object {
                                "id": "280",
                                "name": "test280",
                              },
                              Object {
                                "id": "281",
                                "name": "test281",
                              },
                              Object {
                                "id": "282",
                                "name": "test282",
                              },
                              Object {
                                "id": "283",
                                "name": "test283",
                              },
                              Object {
                                "id": "284",
                                "name": "test284",
                              },
                              Object {
                                "id": "285",
                                "name": "test285",
                              },
                              Object {
                                "id": "286",
                                "name": "test286",
                              },
                              Object {
                                "id": "287",
                                "name": "test287",
                              },
                              Object {
                                "id": "288",
                                "name": "test288",
                              },
                              Object {
                                "id": "289",
                                "name": "test289",
                              },
                              Object {
                                "id": "290",
                                "name": "test290",
                              },
                              Object {
                                "id": "291",
                                "name": "test291",
                              },
                              Object {
                                "id": "292",
                                "name": "test292",
                              },
                              Object {
                                "id": "293",
                                "name": "test293",
                              },
                              Object {
                                "id": "294",
                                "name": "test294",
                              },
                              Object {
                                "id": "295",
                                "name": "test295",
                              },
                              Object {
                                "id": "296",
                                "name": "test296",
                              },
                              Object {
                                "id": "297",
                                "name": "test297",
                              },
                              Object {
                                "id": "298",
                                "name": "test298",
                              },
                              Object {
                                "id": "299",
                                "name": "test299",
                              },
                              Object {
                                "id": "300",
                                "name": "test300",
                              },
                              Object {
                                "id": "301",
                                "name": "test301",
                              },
                              Object {
                                "id": "302",
                                "name": "test302",
                              },
                              Object {
                                "id": "303",
                                "name": "test303",
                              },
                              Object {
                                "id": "304",
                                "name": "test304",
                              },
                              Object {
                                "id": "305",
                                "name": "test305",
                              },
                              Object {
                                "id": "306",
                                "name": "test306",
                              },
                              Object {
                                "id": "307",
                                "name": "test307",
                              },
                              Object {
                                "id": "308",
                                "name": "test308",
                              },
                              Object {
                                "id": "309",
                                "name": "test309",
                              },
                              Object {
                                "id": "310",
                                "name": "test310",
                              },
                              Object {
                                "id": "311",
                                "name": "test311",
                              },
                              Object {
                                "id": "312",
                                "name": "test312",
                              },
                              Object {
                                "id": "313",
                                "name": "test313",
                              },
                              Object {
                                "id": "314",
                                "name": "test314",
                              },
                              Object {
                                "id": "315",
                                "name": "test315",
                              },
                              Object {
                                "id": "316",
                                "name": "test316",
                              },
                              Object {
                                "id": "317",
                                "name": "test317",
                              },
                              Object {
                                "id": "318",
                                "name": "test318",
                              },
                              Object {
                                "id": "319",
                                "name": "test319",
                              },
                              Object {
                                "id": "320",
                                "name": "test320",
                              },
                              Object {
                                "id": "321",
                                "name": "test321",
                              },
                              Object {
                                "id": "322",
                                "name": "test322",
                              },
                              Object {
                                "id": "323",
                                "name": "test323",
                              },
                              Object {
                                "id": "324",
                                "name": "test324",
                              },
                              Object {
                                "id": "325",
                                "name": "test325",
                              },
                              Object {
                                "id": "326",
                                "name": "test326",
                              },
                              Object {
                                "id": "327",
                                "name": "test327",
                              },
                              Object {
                                "id": "328",
                                "name": "test328",
                              },
                              Object {
                                "id": "329",
                                "name": "test329",
                              },
                              Object {
                                "id": "330",
                                "name": "test330",
                              },
                              Object {
                                "id": "331",
                                "name": "test331",
                              },
                              Object {
                                "id": "332",
                                "name": "test332",
                              },
                              Object {
                                "id": "333",
                                "name": "test333",
                              },
                              Object {
                                "id": "334",
                                "name": "test334",
                              },
                              Object {
                                "id": "335",
                                "name": "test335",
                              },
                              Object {
                                "id": "336",
                                "name": "test336",
                              },
                              Object {
                                "id": "337",
                                "name": "test337",
                              },
                              Object {
                                "id": "338",
                                "name": "test338",
                              },
                              Object {
                                "id": "339",
                                "name": "test339",
                              },
                              Object {
                                "id": "340",
                                "name": "test340",
                              },
                              Object {
                                "id": "341",
                                "name": "test341",
                              },
                              Object {
                                "id": "342",
                                "name": "test342",
                              },
                              Object {
                                "id": "343",
                                "name": "test343",
                              },
                              Object {
                                "id": "344",
                                "name": "test344",
                              },
                              Object {
                                "id": "345",
                                "name": "test345",
                              },
                              Object {
                                "id": "346",
                                "name": "test346",
                              },
                              Object {
                                "id": "347",
                                "name": "test347",
                              },
                              Object {
                                "id": "348",
                                "name": "test348",
                              },
                              Object {
                                "id": "349",
                                "name": "test349",
                              },
                              Object {
                                "id": "350",
                                "name": "test350",
                              },
                              Object {
                                "id": "351",
                                "name": "test351",
                              },
                              Object {
                                "id": "352",
                                "name": "test352",
                              },
                              Object {
                                "id": "353",
                                "name": "test353",
                              },
                              Object {
                                "id": "354",
                                "name": "test354",
                              },
                              Object {
                                "id": "355",
                                "name": "test355",
                              },
                              Object {
                                "id": "356",
                                "name": "test356",
                              },
                              Object {
                                "id": "357",
                                "name": "test357",
                              },
                              Object {
                                "id": "358",
                                "name": "test358",
                              },
                              Object {
                                "id": "359",
                                "name": "test359",
                              },
                              Object {
                                "id": "360",
                                "name": "test360",
                              },
                              Object {
                                "id": "361",
                                "name": "test361",
                              },
                              Object {
                                "id": "362",
                                "name": "test362",
                              },
                              Object {
                                "id": "363",
                                "name": "test363",
                              },
                              Object {
                                "id": "364",
                                "name": "test364",
                              },
                              Object {
                                "id": "365",
                                "name": "test365",
                              },
                              Object {
                                "id": "366",
                                "name": "test366",
                              },
                              Object {
                                "id": "367",
                                "name": "test367",
                              },
                              Object {
                                "id": "368",
                                "name": "test368",
                              },
                              Object {
                                "id": "369",
                                "name": "test369",
                              },
                              Object {
                                "id": "370",
                                "name": "test370",
                              },
                              Object {
                                "id": "371",
                                "name": "test371",
                              },
                              Object {
                                "id": "372",
                                "name": "test372",
                              },
                              Object {
                                "id": "373",
                                "name": "test373",
                              },
                              Object {
                                "id": "374",
                                "name": "test374",
                              },
                              Object {
                                "id": "375",
                                "name": "test375",
                              },
                              Object {
                                "id": "376",
                                "name": "test376",
                              },
                              Object {
                                "id": "377",
                                "name": "test377",
                              },
                              Object {
                                "id": "378",
                                "name": "test378",
                              },
                              Object {
                                "id": "379",
                                "name": "test379",
                              },
                              Object {
                                "id": "380",
                                "name": "test380",
                              },
                              Object {
                                "id": "381",
                                "name": "test381",
                              },
                              Object {
                                "id": "382",
                                "name": "test382",
                              },
                              Object {
                                "id": "383",
                                "name": "test383",
                              },
                              Object {
                                "id": "384",
                                "name": "test384",
                              },
                              Object {
                                "id": "385",
                                "name": "test385",
                              },
                              Object {
                                "id": "386",
                                "name": "test386",
                              },
                              Object {
                                "id": "387",
                                "name": "test387",
                              },
                              Object {
                                "id": "388",
                                "name": "test388",
                              },
                              Object {
                                "id": "389",
                                "name": "test389",
                              },
                              Object {
                                "id": "390",
                                "name": "test390",
                              },
                              Object {
                                "id": "391",
                                "name": "test391",
                              },
                              Object {
                                "id": "392",
                                "name": "test392",
                              },
                              Object {
                                "id": "393",
                                "name": "test393",
                              },
                              Object {
                                "id": "394",
                                "name": "test394",
                              },
                              Object {
                                "id": "395",
                                "name": "test395",
                              },
                              Object {
                                "id": "396",
                                "name": "test396",
                              },
                              Object {
                                "id": "397",
                                "name": "test397",
                              },
                              Object {
                                "id": "398",
                                "name": "test398",
                              },
                              Object {
                                "id": "399",
                                "name": "test399",
                              },
                              Object {
                                "id": "400",
                                "name": "test400",
                              },
                              Object {
                                "id": "401",
                                "name": "test401",
                              },
                              Object {
                                "id": "402",
                                "name": "test402",
                              },
                              Object {
                                "id": "403",
                                "name": "test403",
                              },
                              Object {
                                "id": "404",
                                "name": "test404",
                              },
                              Object {
                                "id": "405",
                                "name": "test405",
                              },
                              Object {
                                "id": "406",
                                "name": "test406",
                              },
                              Object {
                                "id": "407",
                                "name": "test407",
                              },
                              Object {
                                "id": "408",
                                "name": "test408",
                              },
                              Object {
                                "id": "409",
                                "name": "test409",
                              },
                              Object {
                                "id": "410",
                                "name": "test410",
                              },
                              Object {
                                "id": "411",
                                "name": "test411",
                              },
                              Object {
                                "id": "412",
                                "name": "test412",
                              },
                              Object {
                                "id": "413",
                                "name": "test413",
                              },
                              Object {
                                "id": "414",
                                "name": "test414",
                              },
                              Object {
                                "id": "415",
                                "name": "test415",
                              },
                              Object {
                                "id": "416",
                                "name": "test416",
                              },
                              Object {
                                "id": "417",
                                "name": "test417",
                              },
                              Object {
                                "id": "418",
                                "name": "test418",
                              },
                              Object {
                                "id": "419",
                                "name": "test419",
                              },
                              Object {
                                "id": "420",
                                "name": "test420",
                              },
                              Object {
                                "id": "421",
                                "name": "test421",
                              },
                              Object {
                                "id": "422",
                                "name": "test422",
                              },
                              Object {
                                "id": "423",
                                "name": "test423",
                              },
                              Object {
                                "id": "424",
                                "name": "test424",
                              },
                              Object {
                                "id": "425",
                                "name": "test425",
                              },
                              Object {
                                "id": "426",
                                "name": "test426",
                              },
                              Object {
                                "id": "427",
                                "name": "test427",
                              },
                              Object {
                                "id": "428",
                                "name": "test428",
                              },
                              Object {
                                "id": "429",
                                "name": "test429",
                              },
                              Object {
                                "id": "430",
                                "name": "test430",
                              },
                              Object {
                                "id": "431",
                                "name": "test431",
                              },
                              Object {
                                "id": "432",
                                "name": "test432",
                              },
                              Object {
                                "id": "433",
                                "name": "test433",
                              },
                              Object {
                                "id": "434",
                                "name": "test434",
                              },
                              Object {
                                "id": "435",
                                "name": "test435",
                              },
                              Object {
                                "id": "436",
                                "name": "test436",
                              },
                              Object {
                                "id": "437",
                                "name": "test437",
                              },
                              Object {
                                "id": "438",
                                "name": "test438",
                              },
                              Object {
                                "id": "439",
                                "name": "test439",
                              },
                              Object {
                                "id": "440",
                                "name": "test440",
                              },
                              Object {
                                "id": "441",
                                "name": "test441",
                              },
                              Object {
                                "id": "442",
                                "name": "test442",
                              },
                              Object {
                                "id": "443",
                                "name": "test443",
                              },
                              Object {
                                "id": "444",
                                "name": "test444",
                              },
                              Object {
                                "id": "445",
                                "name": "test445",
                              },
                              Object {
                                "id": "446",
                                "name": "test446",
                              },
                              Object {
                                "id": "447",
                                "name": "test447",
                              },
                              Object {
                                "id": "448",
                                "name": "test448",
                              },
                              Object {
                                "id": "449",
                                "name": "test449",
                              },
                              Object {
                                "id": "450",
                                "name": "test450",
                              },
                              Object {
                                "id": "451",
                                "name": "test451",
                              },
                              Object {
                                "id": "452",
                                "name": "test452",
                              },
                              Object {
                                "id": "453",
                                "name": "test453",
                              },
                              Object {
                                "id": "454",
                                "name": "test454",
                              },
                              Object {
                                "id": "455",
                                "name": "test455",
                              },
                              Object {
                                "id": "456",
                                "name": "test456",
                              },
                              Object {
                                "id": "457",
                                "name": "test457",
                              },
                              Object {
                                "id": "458",
                                "name": "test458",
                              },
                              Object {
                                "id": "459",
                                "name": "test459",
                              },
                              Object {
                                "id": "460",
                                "name": "test460",
                              },
                              Object {
                                "id": "461",
                                "name": "test461",
                              },
                              Object {
                                "id": "462",
                                "name": "test462",
                              },
                              Object {
                                "id": "463",
                                "name": "test463",
                              },
                              Object {
                                "id": "464",
                                "name": "test464",
                              },
                              Object {
                                "id": "465",
                                "name": "test465",
                              },
                              Object {
                                "id": "466",
                                "name": "test466",
                              },
                              Object {
                                "id": "467",
                                "name": "test467",
                              },
                              Object {
                                "id": "468",
                                "name": "test468",
                              },
                              Object {
                                "id": "469",
                                "name": "test469",
                              },
                              Object {
                                "id": "470",
                                "name": "test470",
                              },
                              Object {
                                "id": "471",
                                "name": "test471",
                              },
                              Object {
                                "id": "472",
                                "name": "test472",
                              },
                              Object {
                                "id": "473",
                                "name": "test473",
                              },
                              Object {
                                "id": "474",
                                "name": "test474",
                              },
                              Object {
                                "id": "475",
                                "name": "test475",
                              },
                              Object {
                                "id": "476",
                                "name": "test476",
                              },
                              Object {
                                "id": "477",
                                "name": "test477",
                              },
                              Object {
                                "id": "478",
                                "name": "test478",
                              },
                              Object {
                                "id": "479",
                                "name": "test479",
                              },
                              Object {
                                "id": "480",
                                "name": "test480",
                              },
                              Object {
                                "id": "481",
                                "name": "test481",
                              },
                              Object {
                                "id": "482",
                                "name": "test482",
                              },
                              Object {
                                "id": "483",
                                "name": "test483",
                              },
                              Object {
                                "id": "484",
                                "name": "test484",
                              },
                              Object {
                                "id": "485",
                                "name": "test485",
                              },
                              Object {
                                "id": "486",
                                "name": "test486",
                              },
                              Object {
                                "id": "487",
                                "name": "test487",
                              },
                              Object {
                                "id": "488",
                                "name": "test488",
                              },
                              Object {
                                "id": "489",
                                "name": "test489",
                              },
                              Object {
                                "id": "490",
                                "name": "test490",
                              },
                              Object {
                                "id": "491",
                                "name": "test491",
                              },
                              Object {
                                "id": "492",
                                "name": "test492",
                              },
                              Object {
                                "id": "493",
                                "name": "test493",
                              },
                              Object {
                                "id": "494",
                                "name": "test494",
                              },
                              Object {
                                "id": "495",
                                "name": "test495",
                              },
                              Object {
                                "id": "496",
                                "name": "test496",
                              },
                              Object {
                                "id": "497",
                                "name": "test497",
                              },
                              Object {
                                "id": "498",
                                "name": "test498",
                              },
                              Object {
                                "id": "499",
                                "name": "test499",
                              },
                            ]
                          }
                          disableVirtualization={false}
                          getItem={[Function]}
                          getItemCount={[Function]}
                          horizontal={false}
                          initialNumToRender={15}
                          keyExtractor={[Function]}
                          maxToRenderPerBatch={10}
                          onContentSizeChange={[Function]}
                          onEndReachedThreshold={2}
                          onLayout={[Function]}
                          onMomentumScrollEnd={[Function]}
                          onScroll={[Function]}
                          onScrollBeginDrag={[Function]}
                          onScrollEndDrag={[Function]}
                          refreshControl={
                            <RefreshControlMock
                              onRefresh={[Function]}
                              refreshing={false}
                            />
                          }
                          removeClippedSubviews={false}
                          renderItem={[Function]}
                          scrollEventThrottle={50}
                          showsVerticalScrollIndicator={false}
                          stickyHeaderIndices={Array []}
                          updateCellsBatchingPeriod={50}
                          viewabilityConfigCallbackPairs={Array []}
                          windowSize={21}
                        >
                          <RCTRefreshControl />
                          <View>
                            <View
                              onLayout={[Function]}
                              style={null}
                            >
                              <View
                                style={
                                  Object {
                                    "borderBottomColor": "#EBE8E8",
                                    "borderBottomWidth": 1,
                                    "flexDirection": "row",
                                    "marginTop": 10,
                                    "padding": 10,
                                  }
                                }
                              >
                                <Text
                                  style={
                                    Object {
                                      "flex": 5,
                                      "fontFamily": "IRANSansWeb_Bold",
                                      "fontSize": 12,
                                      "marginTop": 10,
                                      "padding": 10,
                                    }
                                  }
                                >
                                  Available
                                </Text>
                                <RNGestureHandlerButton
                                  collapsable={false}
                                  onGestureEvent={[Function]}
                                  onGestureHandlerEvent={[Function]}
                                  onGestureHandlerStateChange={[Function]}
                                  onHandlerStateChange={[Function]}
                                  rippleColor={0}
                                >
                                  <View
                                    accessible={true}
                                    style={
                                      Object {
                                        "opacity": 1,
                                      }
                                    }
                                  >
                                    <Image
                                      source={
                                        Object {
                                          "testUri": "../../../app/assets/images/friend-image.jpg",
                                        }
                                      }
                                      style={
                                        Object {
                                          "borderColor": "#1AD927",
                                          "borderRadius": 25,
                                          "borderWidth": 2,
                                          "height": 50,
                                          "padding": 10,
                                          "width": 50,
                                        }
                                      }
                                    />
                                  </View>
                                </RNGestureHandlerButton>
                              </View>
                            </View>
                            <View
                              onLayout={[Function]}
                              style={null}
                            >
                              <View
                                style={
                                  Object {
                                    "borderBottomColor": "#EBE8E8",
                                    "borderBottomWidth": 1,
                                    "flexDirection": "row",
                                    "marginTop": 10,
                                    "padding": 10,
                                  }
                                }
                              >
                                <Text
                                  style={
                                    Object {
                                      "flex": 5,
                                      "fontFamily": "IRANSansWeb_Bold",
                                      "fontSize": 12,
                                      "marginTop": 10,
                                      "padding": 10,
                                    }
                                  }
                                >
                                  Ready
                                </Text>
                                <RNGestureHandlerButton
                                  collapsable={false}
                                  onGestureEvent={[Function]}
                                  onGestureHandlerEvent={[Function]}
                                  onGestureHandlerStateChange={[Function]}
                                  onHandlerStateChange={[Function]}
                                  rippleColor={0}
                                >
                                  <View
                                    accessible={true}
                                    style={
                                      Object {
                                        "opacity": 1,
                                      }
                                    }
                                  >
                                    <Image
                                      source={
                                        Object {
                                          "testUri": "../../../app/assets/images/friend-image.jpg",
                                        }
                                      }
                                      style={
                                        Object {
                                          "borderColor": "#1AD927",
                                          "borderRadius": 25,
                                          "borderWidth": 2,
                                          "height": 50,
                                          "padding": 10,
                                          "width": 50,
                                        }
                                      }
                                    />
                                  </View>
                                </RNGestureHandlerButton>
                              </View>
                            </View>
                            <View
                              onLayout={[Function]}
                              style={null}
                            >
                              <View
                                style={
                                  Object {
                                    "borderBottomColor": "#EBE8E8",
                                    "borderBottomWidth": 1,
                                    "flexDirection": "row",
                                    "marginTop": 10,
                                    "padding": 10,
                                  }
                                }
                              >
                                <Text
                                  style={
                                    Object {
                                      "flex": 5,
                                      "fontFamily": "IRANSansWeb_Bold",
                                      "fontSize": 12,
                                      "marginTop": 10,
                                      "padding": 10,
                                    }
                                  }
                                >
                                  Started
                                </Text>
                                <RNGestureHandlerButton
                                  collapsable={false}
                                  onGestureEvent={[Function]}
                                  onGestureHandlerEvent={[Function]}
                                  onGestureHandlerStateChange={[Function]}
                                  onHandlerStateChange={[Function]}
                                  rippleColor={0}
                                >
                                  <View
                                    accessible={true}
                                    style={
                                      Object {
                                        "opacity": 1,
                                      }
                                    }
                                  >
                                    <Image
                                      source={
                                        Object {
                                          "testUri": "../../../app/assets/images/friend-image.jpg",
                                        }
                                      }
                                      style={
                                        Object {
                                          "borderColor": "#1AD927",
                                          "borderRadius": 25,
                                          "borderWidth": 2,
                                          "height": 50,
                                          "padding": 10,
                                          "width": 50,
                                        }
                                      }
                                    />
                                  </View>
                                </RNGestureHandlerButton>
                              </View>
                            </View>
                            <View
                              onLayout={[Function]}
                              style={null}
                            >
                              <View
                                style={
                                  Object {
                                    "borderBottomColor": "#EBE8E8",
                                    "borderBottomWidth": 1,
                                    "flexDirection": "row",
                                    "marginTop": 10,
                                    "padding": 10,
                                  }
                                }
                              >
                                <Text
                                  style={
                                    Object {
                                      "flex": 5,
                                      "fontFamily": "IRANSansWeb_Bold",
                                      "fontSize": 12,
                                      "marginTop": 10,
                                      "padding": 10,
                                    }
                                  }
                                >
                                  test3
                                </Text>
                                <RNGestureHandlerButton
                                  collapsable={false}
                                  onGestureEvent={[Function]}
                                  onGestureHandlerEvent={[Function]}
                                  onGestureHandlerStateChange={[Function]}
                                  onHandlerStateChange={[Function]}
                                  rippleColor={0}
                                >
                                  <View
                                    accessible={true}
                                    style={
                                      Object {
                                        "opacity": 1,
                                      }
                                    }
                                  >
                                    <Image
                                      source={
                                        Object {
                                          "testUri": "../../../app/assets/images/friend-image.jpg",
                                        }
                                      }
                                      style={
                                        Object {
                                          "borderColor": "#1AD927",
                                          "borderRadius": 25,
                                          "borderWidth": 2,
                                          "height": 50,
                                          "padding": 10,
                                          "width": 50,
                                        }
                                      }
                                    />
                                  </View>
                                </RNGestureHandlerButton>
                              </View>
                            </View>
                            <View
                              onLayout={[Function]}
                              style={null}
                            >
                              <View
                                style={
                                  Object {
                                    "borderBottomColor": "#EBE8E8",
                                    "borderBottomWidth": 1,
                                    "flexDirection": "row",
                                    "marginTop": 10,
                                    "padding": 10,
                                  }
                                }
                              >
                                <Text
                                  style={
                                    Object {
                                      "flex": 5,
                                      "fontFamily": "IRANSansWeb_Bold",
                                      "fontSize": 12,
                                      "marginTop": 10,
                                      "padding": 10,
                                    }
                                  }
                                >
                                  test4
                                </Text>
                                <RNGestureHandlerButton
                                  collapsable={false}
                                  onGestureEvent={[Function]}
                                  onGestureHandlerEvent={[Function]}
                                  onGestureHandlerStateChange={[Function]}
                                  onHandlerStateChange={[Function]}
                                  rippleColor={0}
                                >
                                  <View
                                    accessible={true}
                                    style={
                                      Object {
                                        "opacity": 1,
                                      }
                                    }
                                  >
                                    <Image
                                      source={
                                        Object {
                                          "testUri": "../../../app/assets/images/friend-image.jpg",
                                        }
                                      }
                                      style={
                                        Object {
                                          "borderColor": "#1AD927",
                                          "borderRadius": 25,
                                          "borderWidth": 2,
                                          "height": 50,
                                          "padding": 10,
                                          "width": 50,
                                        }
                                      }
                                    />
                                  </View>
                                </RNGestureHandlerButton>
                              </View>
                            </View>
                            <View
                              onLayout={[Function]}
                              style={null}
                            >
                              <View
                                style={
                                  Object {
                                    "borderBottomColor": "#EBE8E8",
                                    "borderBottomWidth": 1,
                                    "flexDirection": "row",
                                    "marginTop": 10,
                                    "padding": 10,
                                  }
                                }
                              >
                                <Text
                                  style={
                                    Object {
                                      "flex": 5,
                                      "fontFamily": "IRANSansWeb_Bold",
                                      "fontSize": 12,
                                      "marginTop": 10,
                                      "padding": 10,
                                    }
                                  }
                                >
                                  test5
                                </Text>
                                <RNGestureHandlerButton
                                  collapsable={false}
                                  onGestureEvent={[Function]}
                                  onGestureHandlerEvent={[Function]}
                                  onGestureHandlerStateChange={[Function]}
                                  onHandlerStateChange={[Function]}
                                  rippleColor={0}
                                >
                                  <View
                                    accessible={true}
                                    style={
                                      Object {
                                        "opacity": 1,
                                      }
                                    }
                                  >
                                    <Image
                                      source={
                                        Object {
                                          "testUri": "../../../app/assets/images/friend-image.jpg",
                                        }
                                      }
                                      style={
                                        Object {
                                          "borderColor": "#1AD927",
                                          "borderRadius": 25,
                                          "borderWidth": 2,
                                          "height": 50,
                                          "padding": 10,
                                          "width": 50,
                                        }
                                      }
                                    />
                                  </View>
                                </RNGestureHandlerButton>
                              </View>
                            </View>
                            <View
                              onLayout={[Function]}
                              style={null}
                            >
                              <View
                                style={
                                  Object {
                                    "borderBottomColor": "#EBE8E8",
                                    "borderBottomWidth": 1,
                                    "flexDirection": "row",
                                    "marginTop": 10,
                                    "padding": 10,
                                  }
                                }
                              >
                                <Text
                                  style={
                                    Object {
                                      "flex": 5,
                                      "fontFamily": "IRANSansWeb_Bold",
                                      "fontSize": 12,
                                      "marginTop": 10,
                                      "padding": 10,
                                    }
                                  }
                                >
                                  test6
                                </Text>
                                <RNGestureHandlerButton
                                  collapsable={false}
                                  onGestureEvent={[Function]}
                                  onGestureHandlerEvent={[Function]}
                                  onGestureHandlerStateChange={[Function]}
                                  onHandlerStateChange={[Function]}
                                  rippleColor={0}
                                >
                                  <View
                                    accessible={true}
                                    style={
                                      Object {
                                        "opacity": 1,
                                      }
                                    }
                                  >
                                    <Image
                                      source={
                                        Object {
                                          "testUri": "../../../app/assets/images/friend-image.jpg",
                                        }
                                      }
                                      style={
                                        Object {
                                          "borderColor": "#1AD927",
                                          "borderRadius": 25,
                                          "borderWidth": 2,
                                          "height": 50,
                                          "padding": 10,
                                          "width": 50,
                                        }
                                      }
                                    />
                                  </View>
                                </RNGestureHandlerButton>
                              </View>
                            </View>
                            <View
                              onLayout={[Function]}
                              style={null}
                            >
                              <View
                                style={
                                  Object {
                                    "borderBottomColor": "#EBE8E8",
                                    "borderBottomWidth": 1,
                                    "flexDirection": "row",
                                    "marginTop": 10,
                                    "padding": 10,
                                  }
                                }
                              >
                                <Text
                                  style={
                                    Object {
                                      "flex": 5,
                                      "fontFamily": "IRANSansWeb_Bold",
                                      "fontSize": 12,
                                      "marginTop": 10,
                                      "padding": 10,
                                    }
                                  }
                                >
                                  test7
                                </Text>
                                <RNGestureHandlerButton
                                  collapsable={false}
                                  onGestureEvent={[Function]}
                                  onGestureHandlerEvent={[Function]}
                                  onGestureHandlerStateChange={[Function]}
                                  onHandlerStateChange={[Function]}
                                  rippleColor={0}
                                >
                                  <View
                                    accessible={true}
                                    style={
                                      Object {
                                        "opacity": 1,
                                      }
                                    }
                                  >
                                    <Image
                                      source={
                                        Object {
                                          "testUri": "../../../app/assets/images/friend-image.jpg",
                                        }
                                      }
                                      style={
                                        Object {
                                          "borderColor": "#1AD927",
                                          "borderRadius": 25,
                                          "borderWidth": 2,
                                          "height": 50,
                                          "padding": 10,
                                          "width": 50,
                                        }
                                      }
                                    />
                                  </View>
                                </RNGestureHandlerButton>
                              </View>
                            </View>
                            <View
                              onLayout={[Function]}
                              style={null}
                            >
                              <View
                                style={
                                  Object {
                                    "borderBottomColor": "#EBE8E8",
                                    "borderBottomWidth": 1,
                                    "flexDirection": "row",
                                    "marginTop": 10,
                                    "padding": 10,
                                  }
                                }
                              >
                                <Text
                                  style={
                                    Object {
                                      "flex": 5,
                                      "fontFamily": "IRANSansWeb_Bold",
                                      "fontSize": 12,
                                      "marginTop": 10,
                                      "padding": 10,
                                    }
                                  }
                                >
                                  test8
                                </Text>
                                <RNGestureHandlerButton
                                  collapsable={false}
                                  onGestureEvent={[Function]}
                                  onGestureHandlerEvent={[Function]}
                                  onGestureHandlerStateChange={[Function]}
                                  onHandlerStateChange={[Function]}
                                  rippleColor={0}
                                >
                                  <View
                                    accessible={true}
                                    style={
                                      Object {
                                        "opacity": 1,
                                      }
                                    }
                                  >
                                    <Image
                                      source={
                                        Object {
                                          "testUri": "../../../app/assets/images/friend-image.jpg",
                                        }
                                      }
                                      style={
                                        Object {
                                          "borderColor": "#1AD927",
                                          "borderRadius": 25,
                                          "borderWidth": 2,
                                          "height": 50,
                                          "padding": 10,
                                          "width": 50,
                                        }
                                      }
                                    />
                                  </View>
                                </RNGestureHandlerButton>
                              </View>
                            </View>
                            <View
                              onLayout={[Function]}
                              style={null}
                            >
                              <View
                                style={
                                  Object {
                                    "borderBottomColor": "#EBE8E8",
                                    "borderBottomWidth": 1,
                                    "flexDirection": "row",
                                    "marginTop": 10,
                                    "padding": 10,
                                  }
                                }
                              >
                                <Text
                                  style={
                                    Object {
                                      "flex": 5,
                                      "fontFamily": "IRANSansWeb_Bold",
                                      "fontSize": 12,
                                      "marginTop": 10,
                                      "padding": 10,
                                    }
                                  }
                                >
                                  test9
                                </Text>
                                <RNGestureHandlerButton
                                  collapsable={false}
                                  onGestureEvent={[Function]}
                                  onGestureHandlerEvent={[Function]}
                                  onGestureHandlerStateChange={[Function]}
                                  onHandlerStateChange={[Function]}
                                  rippleColor={0}
                                >
                                  <View
                                    accessible={true}
                                    style={
                                      Object {
                                        "opacity": 1,
                                      }
                                    }
                                  >
                                    <Image
                                      source={
                                        Object {
                                          "testUri": "../../../app/assets/images/friend-image.jpg",
                                        }
                                      }
                                      style={
                                        Object {
                                          "borderColor": "#1AD927",
                                          "borderRadius": 25,
                                          "borderWidth": 2,
                                          "height": 50,
                                          "padding": 10,
                                          "width": 50,
                                        }
                                      }
                                    />
                                  </View>
                                </RNGestureHandlerButton>
                              </View>
                            </View>
                            <View
                              onLayout={[Function]}
                              style={null}
                            >
                              <View
                                style={
                                  Object {
                                    "borderBottomColor": "#EBE8E8",
                                    "borderBottomWidth": 1,
                                    "flexDirection": "row",
                                    "marginTop": 10,
                                    "padding": 10,
                                  }
                                }
                              >
                                <Text
                                  style={
                                    Object {
                                      "flex": 5,
                                      "fontFamily": "IRANSansWeb_Bold",
                                      "fontSize": 12,
                                      "marginTop": 10,
                                      "padding": 10,
                                    }
                                  }
                                >
                                  test10
                                </Text>
                                <RNGestureHandlerButton
                                  collapsable={false}
                                  onGestureEvent={[Function]}
                                  onGestureHandlerEvent={[Function]}
                                  onGestureHandlerStateChange={[Function]}
                                  onHandlerStateChange={[Function]}
                                  rippleColor={0}
                                >
                                  <View
                                    accessible={true}
                                    style={
                                      Object {
                                        "opacity": 1,
                                      }
                                    }
                                  >
                                    <Image
                                      source={
                                        Object {
                                          "testUri": "../../../app/assets/images/friend-image.jpg",
                                        }
                                      }
                                      style={
                                        Object {
                                          "borderColor": "#1AD927",
                                          "borderRadius": 25,
                                          "borderWidth": 2,
                                          "height": 50,
                                          "padding": 10,
                                          "width": 50,
                                        }
                                      }
                                    />
                                  </View>
                                </RNGestureHandlerButton>
                              </View>
                            </View>
                            <View
                              onLayout={[Function]}
                              style={null}
                            >
                              <View
                                style={
                                  Object {
                                    "borderBottomColor": "#EBE8E8",
                                    "borderBottomWidth": 1,
                                    "flexDirection": "row",
                                    "marginTop": 10,
                                    "padding": 10,
                                  }
                                }
                              >
                                <Text
                                  style={
                                    Object {
                                      "flex": 5,
                                      "fontFamily": "IRANSansWeb_Bold",
                                      "fontSize": 12,
                                      "marginTop": 10,
                                      "padding": 10,
                                    }
                                  }
                                >
                                  test11
                                </Text>
                                <RNGestureHandlerButton
                                  collapsable={false}
                                  onGestureEvent={[Function]}
                                  onGestureHandlerEvent={[Function]}
                                  onGestureHandlerStateChange={[Function]}
                                  onHandlerStateChange={[Function]}
                                  rippleColor={0}
                                >
                                  <View
                                    accessible={true}
                                    style={
                                      Object {
                                        "opacity": 1,
                                      }
                                    }
                                  >
                                    <Image
                                      source={
                                        Object {
                                          "testUri": "../../../app/assets/images/friend-image.jpg",
                                        }
                                      }
                                      style={
                                        Object {
                                          "borderColor": "#1AD927",
                                          "borderRadius": 25,
                                          "borderWidth": 2,
                                          "height": 50,
                                          "padding": 10,
                                          "width": 50,
                                        }
                                      }
                                    />
                                  </View>
                                </RNGestureHandlerButton>
                              </View>
                            </View>
                            <View
                              onLayout={[Function]}
                              style={null}
                            >
                              <View
                                style={
                                  Object {
                                    "borderBottomColor": "#EBE8E8",
                                    "borderBottomWidth": 1,
                                    "flexDirection": "row",
                                    "marginTop": 10,
                                    "padding": 10,
                                  }
                                }
                              >
                                <Text
                                  style={
                                    Object {
                                      "flex": 5,
                                      "fontFamily": "IRANSansWeb_Bold",
                                      "fontSize": 12,
                                      "marginTop": 10,
                                      "padding": 10,
                                    }
                                  }
                                >
                                  test12
                                </Text>
                                <RNGestureHandlerButton
                                  collapsable={false}
                                  onGestureEvent={[Function]}
                                  onGestureHandlerEvent={[Function]}
                                  onGestureHandlerStateChange={[Function]}
                                  onHandlerStateChange={[Function]}
                                  rippleColor={0}
                                >
                                  <View
                                    accessible={true}
                                    style={
                                      Object {
                                        "opacity": 1,
                                      }
                                    }
                                  >
                                    <Image
                                      source={
                                        Object {
                                          "testUri": "../../../app/assets/images/friend-image.jpg",
                                        }
                                      }
                                      style={
                                        Object {
                                          "borderColor": "#1AD927",
                                          "borderRadius": 25,
                                          "borderWidth": 2,
                                          "height": 50,
                                          "padding": 10,
                                          "width": 50,
                                        }
                                      }
                                    />
                                  </View>
                                </RNGestureHandlerButton>
                              </View>
                            </View>
                            <View
                              onLayout={[Function]}
                              style={null}
                            >
                              <View
                                style={
                                  Object {
                                    "borderBottomColor": "#EBE8E8",
                                    "borderBottomWidth": 1,
                                    "flexDirection": "row",
                                    "marginTop": 10,
                                    "padding": 10,
                                  }
                                }
                              >
                                <Text
                                  style={
                                    Object {
                                      "flex": 5,
                                      "fontFamily": "IRANSansWeb_Bold",
                                      "fontSize": 12,
                                      "marginTop": 10,
                                      "padding": 10,
                                    }
                                  }
                                >
                                  test13
                                </Text>
                                <RNGestureHandlerButton
                                  collapsable={false}
                                  onGestureEvent={[Function]}
                                  onGestureHandlerEvent={[Function]}
                                  onGestureHandlerStateChange={[Function]}
                                  onHandlerStateChange={[Function]}
                                  rippleColor={0}
                                >
                                  <View
                                    accessible={true}
                                    style={
                                      Object {
                                        "opacity": 1,
                                      }
                                    }
                                  >
                                    <Image
                                      source={
                                        Object {
                                          "testUri": "../../../app/assets/images/friend-image.jpg",
                                        }
                                      }
                                      style={
                                        Object {
                                          "borderColor": "#1AD927",
                                          "borderRadius": 25,
                                          "borderWidth": 2,
                                          "height": 50,
                                          "padding": 10,
                                          "width": 50,
                                        }
                                      }
                                    />
                                  </View>
                                </RNGestureHandlerButton>
                              </View>
                            </View>
                            <View
                              onLayout={[Function]}
                              style={null}
                            >
                              <View
                                style={
                                  Object {
                                    "borderBottomColor": "#EBE8E8",
                                    "borderBottomWidth": 1,
                                    "flexDirection": "row",
                                    "marginTop": 10,
                                    "padding": 10,
                                  }
                                }
                              >
                                <Text
                                  style={
                                    Object {
                                      "flex": 5,
                                      "fontFamily": "IRANSansWeb_Bold",
                                      "fontSize": 12,
                                      "marginTop": 10,
                                      "padding": 10,
                                    }
                                  }
                                >
                                  test14
                                </Text>
                                <RNGestureHandlerButton
                                  collapsable={false}
                                  onGestureEvent={[Function]}
                                  onGestureHandlerEvent={[Function]}
                                  onGestureHandlerStateChange={[Function]}
                                  onHandlerStateChange={[Function]}
                                  rippleColor={0}
                                >
                                  <View
                                    accessible={true}
                                    style={
                                      Object {
                                        "opacity": 1,
                                      }
                                    }
                                  >
                                    <Image
                                      source={
                                        Object {
                                          "testUri": "../../../app/assets/images/friend-image.jpg",
                                        }
                                      }
                                      style={
                                        Object {
                                          "borderColor": "#1AD927",
                                          "borderRadius": 25,
                                          "borderWidth": 2,
                                          "height": 50,
                                          "padding": 10,
                                          "width": 50,
                                        }
                                      }
                                    />
                                  </View>
                                </RNGestureHandlerButton>
                              </View>
                            </View>
                            <View
                              style={
                                Object {
                                  "height": 0,
                                }
                              }
                            />
                          </View>
                        </RCTScrollView>
                      </View>
                      <View
                        style={
                          Object {
                            "backgroundColor": "white",
                            "flex": 1,
                            "justifyContent": "flex-end",
                          }
                        }
                      >
                        <View
                          accessible={true}
                          focusable={true}
                          onClick={[Function]}
                          onResponderGrant={[Function]}
                          onResponderMove={[Function]}
                          onResponderRelease={[Function]}
                          onResponderTerminate={[Function]}
                          onResponderTerminationRequest={[Function]}
                          onStartShouldSetResponder={[Function]}
                          style={
                            Object {
                              "backgroundColor": "#fff",
                              "borderColor": "#1AD927",
                              "borderRadius": 5,
                              "borderWidth": 1,
                              "elevation": 1,
                              "margin": 20,
                              "opacity": 1,
                              "paddingHorizontal": 10,
                              "paddingVertical": 10,
                            }
                          }
                        >
                          <Text
                            style={
                              Object {
                                "alignSelf": "center",
                                "color": "#1AD927",
                                "fontFamily": "IRANSansWeb_Bold",
                                "fontSize": 16,
                                "writingDirection": "auto",
                              }
                            }
                          >
                            ایجاد گروه جدید
                          </Text>
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
  </RNCSafeAreaProvider>
</View>
`;

exports[`Navigation should render correctly 3`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <RNCSafeAreaProvider
    onInsetsChange={[Function]}
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
      ]
    }
  >
    <View
      pointerEvents="box-none"
      style={
        Object {
          "zIndex": 1,
        }
      }
    >
      <View
        accessibilityElementsHidden={false}
        importantForAccessibility="auto"
        onLayout={[Function]}
        pointerEvents="box-none"
        style={null}
      >
        <View
          pointerEvents="box-none"
          style={
            Object {
              "bottom": 0,
              "left": 0,
              "opacity": 1,
              "position": "absolute",
              "right": 0,
              "top": 0,
              "zIndex": 0,
            }
          }
        >
          <View
            style={
              Object {
                "backgroundColor": "rgb(255, 255, 255)",
                "borderBottomColor": "rgb(216, 216, 216)",
                "flex": 1,
                "shadowColor": "rgb(216, 216, 216)",
                "shadowOffset": Object {
                  "height": 0.5,
                  "width": 0,
                },
                "shadowOpacity": 0.85,
                "shadowRadius": 0,
              }
            }
          />
        </View>
        <View
          pointerEvents="box-none"
          style={
            Object {
              "height": 64,
              "maxHeight": undefined,
              "minHeight": undefined,
              "opacity": undefined,
              "transform": undefined,
            }
          }
        >
          <View
            pointerEvents="none"
            style={
              Object {
                "height": 20,
              }
            }
          />
          <View
            pointerEvents="box-none"
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "center",
              }
            }
          >
            <View
              pointerEvents="box-none"
              style={
                Object {
                  "marginHorizontal": 16,
                  "opacity": 1,
                }
              }
            >
              <Text
                accessibilityRole="header"
                aria-level="1"
                numberOfLines={1}
                onLayout={[Function]}
                style={
                  Object {
                    "color": "rgb(28, 28, 30)",
                    "fontSize": 17,
                    "fontWeight": "600",
                  }
                }
              >
                MockedScreen
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
    <View
      onLayout={[Function]}
      style={
        Object {
          "flex": 1,
        }
      }
    >
      <View
        pointerEvents="box-none"
        style={
          Object {
            "bottom": 0,
            "left": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
          }
        }
      >
        <View
          collapsable={false}
          style={
            Object {
              "opacity": 1,
            }
          }
        />
        <View
          accessibilityElementsHidden={false}
          closing={false}
          gestureVelocityImpact={0.3}
          importantForAccessibility="auto"
          onClose={[Function]}
          onGestureBegin={[Function]}
          onGestureCanceled={[Function]}
          onGestureEnd={[Function]}
          onOpen={[Function]}
          onTransitionStart={[Function]}
          pointerEvents="box-none"
          style={
            Object {
              "bottom": 0,
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
            }
          }
          transitionSpec={
            Object {
              "close": Object {
                "animation": "spring",
                "config": Object {
                  "damping": 500,
                  "mass": 3,
                  "overshootClamping": true,
                  "restDisplacementThreshold": 10,
                  "restSpeedThreshold": 10,
                  "stiffness": 1000,
                },
              },
              "open": Object {
                "animation": "spring",
                "config": Object {
                  "damping": 500,
                  "mass": 3,
                  "overshootClamping": true,
                  "restDisplacementThreshold": 10,
                  "restSpeedThreshold": 10,
                  "stiffness": 1000,
                },
              },
            }
          }
        >
          <View
            needsOffscreenAlphaCompositing={false}
            pointerEvents="box-none"
            style={
              Object {
                "flex": 1,
              }
            }
          >
            <View
              collapsable={false}
              forwardedRef={[Function]}
              onGestureHandlerEvent={[Function]}
              onGestureHandlerStateChange={[Function]}
              style={
                Object {
                  "flex": 1,
                  "transform": Array [
                    Object {
                      "translateX": 0,
                    },
                    Object {
                      "translateX": 0,
                    },
                  ],
                }
              }
            >
              <View
                pointerEvents="none"
                style={
                  Object {
                    "backgroundColor": "rgb(242, 242, 242)",
                    "bottom": 0,
                    "left": 0,
                    "position": "absolute",
                    "shadowColor": "#000",
                    "shadowOffset": Object {
                      "height": 1,
                      "width": -1,
                    },
                    "shadowOpacity": 0.3,
                    "shadowRadius": 5,
                    "top": 0,
                    "width": 3,
                  }
                }
              />
              <View
                style={
                  Array [
                    Object {
                      "flex": 1,
                      "overflow": "hidden",
                    },
                    Array [
                      Object {
                        "backgroundColor": "rgb(242, 242, 242)",
                      },
                      undefined,
                    ],
                  ]
                }
              >
                <View
                  style={
                    Object {
                      "flex": 1,
                      "flexDirection": "column-reverse",
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "flex": 1,
                      }
                    }
                  >
                    <View
                      style={
                        Object {
                          "backgroundColor": "#1AD927",
                          "flex": 1,
                        }
                      }
                    >
                      <View
                        forwardedRef={[Function]}
                        style={
                          Object {
                            "backgroundColor": "#fff",
                            "flex": 8,
                            "paddingBottom": 30,
                            "paddingHorizontal": 20,
                            "transform": Array [
                              Object {
                                "translateY": 100,
                              },
                            ],
                          }
                        }
                      >
                        <RCTScrollView
                          disableVirtualization={false}
                          getItem={[Function]}
                          getItemCount={[Function]}
                          horizontal={false}
                          initialNumToRender={10}
                          keyExtractor={[Function]}
                          maxToRenderPerBatch={10}
                          onContentSizeChange={[Function]}
                          onEndReachedThreshold={2}
                          onLayout={[Function]}
                          onMomentumScrollEnd={[Function]}
                          onScroll={[Function]}
                          onScrollBeginDrag={[Function]}
                          onScrollEndDrag={[Function]}
                          refreshControl={
                            <RefreshControlMock
                              onRefresh={[Function]}
                              refreshing={false}
                            />
                          }
                          removeClippedSubviews={false}
                          renderItem={[Function]}
                          scrollEventThrottle={50}
                          showsVerticalScrollIndicator={false}
                          stickyHeaderIndices={Array []}
                          updateCellsBatchingPeriod={50}
                          viewabilityConfigCallbackPairs={Array []}
                          windowSize={21}
                        >
                          <RCTRefreshControl />
                          <View />
                        </RCTScrollView>
                      </View>
                      <View
                        style={
                          Object {
                            "backgroundColor": "white",
                            "flex": 1,
                            "justifyContent": "flex-end",
                          }
                        }
                      >
                        <View
                          accessible={true}
                          focusable={true}
                          onClick={[Function]}
                          onResponderGrant={[Function]}
                          onResponderMove={[Function]}
                          onResponderRelease={[Function]}
                          onResponderTerminate={[Function]}
                          onResponderTerminationRequest={[Function]}
                          onStartShouldSetResponder={[Function]}
                          style={
                            Object {
                              "backgroundColor": "#fff",
                              "borderColor": "#1AD927",
                              "borderRadius": 5,
                              "borderWidth": 1,
                              "elevation": 1,
                              "margin": 20,
                              "opacity": 1,
                              "paddingHorizontal": 10,
                              "paddingVertical": 10,
                            }
                          }
                        >
                          <Text
                            style={
                              Object {
                                "alignSelf": "center",
                                "color": "#1AD927",
                                "fontFamily": "IRANSansWeb_Bold",
                                "fontSize": 16,
                                "writingDirection": "auto",
                              }
                            }
                          >
                            اضافه کردن دوستان جدید
                          </Text>
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
  </RNCSafeAreaProvider>
</View>
`;

exports[`Navigation should render correctly 4`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <RNCSafeAreaProvider
    onInsetsChange={[Function]}
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
      ]
    }
  >
    <View
      pointerEvents="box-none"
      style={
        Object {
          "zIndex": 1,
        }
      }
    >
      <View
        accessibilityElementsHidden={false}
        importantForAccessibility="auto"
        onLayout={[Function]}
        pointerEvents="box-none"
        style={null}
      >
        <View
          pointerEvents="box-none"
          style={
            Object {
              "bottom": 0,
              "left": 0,
              "opacity": 1,
              "position": "absolute",
              "right": 0,
              "top": 0,
              "zIndex": 0,
            }
          }
        >
          <View
            style={
              Object {
                "backgroundColor": "rgb(255, 255, 255)",
                "borderBottomColor": "rgb(216, 216, 216)",
                "flex": 1,
                "shadowColor": "rgb(216, 216, 216)",
                "shadowOffset": Object {
                  "height": 0.5,
                  "width": 0,
                },
                "shadowOpacity": 0.85,
                "shadowRadius": 0,
              }
            }
          />
        </View>
        <View
          pointerEvents="box-none"
          style={
            Object {
              "height": 64,
              "maxHeight": undefined,
              "minHeight": undefined,
              "opacity": undefined,
              "transform": undefined,
            }
          }
        >
          <View
            pointerEvents="none"
            style={
              Object {
                "height": 20,
              }
            }
          />
          <View
            pointerEvents="box-none"
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "center",
              }
            }
          >
            <View
              pointerEvents="box-none"
              style={
                Object {
                  "marginHorizontal": 16,
                  "opacity": 1,
                }
              }
            >
              <Text
                accessibilityRole="header"
                aria-level="1"
                numberOfLines={1}
                onLayout={[Function]}
                style={
                  Object {
                    "color": "rgb(28, 28, 30)",
                    "fontSize": 17,
                    "fontWeight": "600",
                  }
                }
              >
                MockedScreen
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
    <View
      onLayout={[Function]}
      style={
        Object {
          "flex": 1,
        }
      }
    >
      <View
        pointerEvents="box-none"
        style={
          Object {
            "bottom": 0,
            "left": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
          }
        }
      >
        <View
          collapsable={false}
          style={
            Object {
              "opacity": 1,
            }
          }
        />
        <View
          accessibilityElementsHidden={false}
          closing={false}
          gestureVelocityImpact={0.3}
          importantForAccessibility="auto"
          onClose={[Function]}
          onGestureBegin={[Function]}
          onGestureCanceled={[Function]}
          onGestureEnd={[Function]}
          onOpen={[Function]}
          onTransitionStart={[Function]}
          pointerEvents="box-none"
          style={
            Object {
              "bottom": 0,
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
            }
          }
          transitionSpec={
            Object {
              "close": Object {
                "animation": "spring",
                "config": Object {
                  "damping": 500,
                  "mass": 3,
                  "overshootClamping": true,
                  "restDisplacementThreshold": 10,
                  "restSpeedThreshold": 10,
                  "stiffness": 1000,
                },
              },
              "open": Object {
                "animation": "spring",
                "config": Object {
                  "damping": 500,
                  "mass": 3,
                  "overshootClamping": true,
                  "restDisplacementThreshold": 10,
                  "restSpeedThreshold": 10,
                  "stiffness": 1000,
                },
              },
            }
          }
        >
          <View
            needsOffscreenAlphaCompositing={false}
            pointerEvents="box-none"
            style={
              Object {
                "flex": 1,
              }
            }
          >
            <View
              collapsable={false}
              forwardedRef={[Function]}
              onGestureHandlerEvent={[Function]}
              onGestureHandlerStateChange={[Function]}
              style={
                Object {
                  "flex": 1,
                  "transform": Array [
                    Object {
                      "translateX": 0,
                    },
                    Object {
                      "translateX": 0,
                    },
                  ],
                }
              }
            >
              <View
                pointerEvents="none"
                style={
                  Object {
                    "backgroundColor": "rgb(242, 242, 242)",
                    "bottom": 0,
                    "left": 0,
                    "position": "absolute",
                    "shadowColor": "#000",
                    "shadowOffset": Object {
                      "height": 1,
                      "width": -1,
                    },
                    "shadowOpacity": 0.3,
                    "shadowRadius": 5,
                    "top": 0,
                    "width": 3,
                  }
                }
              />
              <View
                style={
                  Array [
                    Object {
                      "flex": 1,
                      "overflow": "hidden",
                    },
                    Array [
                      Object {
                        "backgroundColor": "rgb(242, 242, 242)",
                      },
                      undefined,
                    ],
                  ]
                }
              >
                <View
                  style={
                    Object {
                      "flex": 1,
                      "flexDirection": "column-reverse",
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "flex": 1,
                      }
                    }
                  >
                    <View
                      style={
                        Object {
                          "backgroundColor": "#1AD927",
                          "flex": 1,
                        }
                      }
                    >
                      <View
                        forwardedRef={[Function]}
                        style={
                          Object {
                            "backgroundColor": "#fff",
                            "flex": 8,
                            "paddingBottom": 30,
                            "paddingHorizontal": 20,
                            "transform": Array [
                              Object {
                                "translateY": 100,
                              },
                            ],
                          }
                        }
                      >
                        <RCTScrollView
                          disableVirtualization={false}
                          getItem={[Function]}
                          getItemCount={[Function]}
                          horizontal={false}
                          initialNumToRender={10}
                          keyExtractor={[Function]}
                          maxToRenderPerBatch={10}
                          onContentSizeChange={[Function]}
                          onEndReachedThreshold={2}
                          onLayout={[Function]}
                          onMomentumScrollEnd={[Function]}
                          onScroll={[Function]}
                          onScrollBeginDrag={[Function]}
                          onScrollEndDrag={[Function]}
                          refreshControl={
                            <RefreshControlMock
                              onRefresh={[Function]}
                              refreshing={false}
                            />
                          }
                          removeClippedSubviews={false}
                          renderItem={[Function]}
                          scrollEventThrottle={50}
                          showsVerticalScrollIndicator={false}
                          stickyHeaderIndices={Array []}
                          updateCellsBatchingPeriod={50}
                          viewabilityConfigCallbackPairs={Array []}
                          windowSize={21}
                        >
                          <RCTRefreshControl />
                          <View />
                        </RCTScrollView>
                      </View>
                      <View
                        style={
                          Object {
                            "backgroundColor": "white",
                            "flex": 1,
                            "justifyContent": "flex-end",
                          }
                        }
                      >
                        <View
                          accessible={true}
                          focusable={true}
                          onClick={[Function]}
                          onResponderGrant={[Function]}
                          onResponderMove={[Function]}
                          onResponderRelease={[Function]}
                          onResponderTerminate={[Function]}
                          onResponderTerminationRequest={[Function]}
                          onStartShouldSetResponder={[Function]}
                          style={
                            Object {
                              "backgroundColor": "#fff",
                              "borderColor": "#1AD927",
                              "borderRadius": 5,
                              "borderWidth": 1,
                              "elevation": 1,
                              "margin": 20,
                              "opacity": 1,
                              "paddingHorizontal": 10,
                              "paddingVertical": 10,
                            }
                          }
                        >
                          <Text
                            style={
                              Object {
                                "alignSelf": "center",
                                "color": "#1AD927",
                                "fontFamily": "IRANSansWeb_Bold",
                                "fontSize": 16,
                                "writingDirection": "auto",
                              }
                            }
                          >
                            ثبت فعالیت جدید
                          </Text>
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
  </RNCSafeAreaProvider>
</View>
`;

exports[`Navigation should render correctly 5`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <RNCSafeAreaProvider
    onInsetsChange={[Function]}
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
      ]
    }
  >
    <View
      pointerEvents="box-none"
      style={
        Object {
          "zIndex": 1,
        }
      }
    >
      <View
        accessibilityElementsHidden={false}
        importantForAccessibility="auto"
        onLayout={[Function]}
        pointerEvents="box-none"
        style={null}
      >
        <View
          pointerEvents="box-none"
          style={
            Object {
              "bottom": 0,
              "left": 0,
              "opacity": 1,
              "position": "absolute",
              "right": 0,
              "top": 0,
              "zIndex": 0,
            }
          }
        >
          <View
            style={
              Object {
                "backgroundColor": "rgb(255, 255, 255)",
                "borderBottomColor": "rgb(216, 216, 216)",
                "flex": 1,
                "shadowColor": "rgb(216, 216, 216)",
                "shadowOffset": Object {
                  "height": 0.5,
                  "width": 0,
                },
                "shadowOpacity": 0.85,
                "shadowRadius": 0,
              }
            }
          />
        </View>
        <View
          pointerEvents="box-none"
          style={
            Object {
              "height": 64,
              "maxHeight": undefined,
              "minHeight": undefined,
              "opacity": undefined,
              "transform": undefined,
            }
          }
        >
          <View
            pointerEvents="none"
            style={
              Object {
                "height": 20,
              }
            }
          />
          <View
            pointerEvents="box-none"
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "center",
              }
            }
          >
            <View
              pointerEvents="box-none"
              style={
                Object {
                  "marginHorizontal": 16,
                  "opacity": 1,
                }
              }
            >
              <Text
                accessibilityRole="header"
                aria-level="1"
                numberOfLines={1}
                onLayout={[Function]}
                style={
                  Object {
                    "color": "rgb(28, 28, 30)",
                    "fontSize": 17,
                    "fontWeight": "600",
                  }
                }
              >
                MockedScreen
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
    <View
      onLayout={[Function]}
      style={
        Object {
          "flex": 1,
        }
      }
    >
      <View
        pointerEvents="box-none"
        style={
          Object {
            "bottom": 0,
            "left": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
          }
        }
      >
        <View
          collapsable={false}
          style={
            Object {
              "opacity": 1,
            }
          }
        />
        <View
          accessibilityElementsHidden={false}
          closing={false}
          gestureVelocityImpact={0.3}
          importantForAccessibility="auto"
          onClose={[Function]}
          onGestureBegin={[Function]}
          onGestureCanceled={[Function]}
          onGestureEnd={[Function]}
          onOpen={[Function]}
          onTransitionStart={[Function]}
          pointerEvents="box-none"
          style={
            Object {
              "bottom": 0,
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
            }
          }
          transitionSpec={
            Object {
              "close": Object {
                "animation": "spring",
                "config": Object {
                  "damping": 500,
                  "mass": 3,
                  "overshootClamping": true,
                  "restDisplacementThreshold": 10,
                  "restSpeedThreshold": 10,
                  "stiffness": 1000,
                },
              },
              "open": Object {
                "animation": "spring",
                "config": Object {
                  "damping": 500,
                  "mass": 3,
                  "overshootClamping": true,
                  "restDisplacementThreshold": 10,
                  "restSpeedThreshold": 10,
                  "stiffness": 1000,
                },
              },
            }
          }
        >
          <View
            needsOffscreenAlphaCompositing={false}
            pointerEvents="box-none"
            style={
              Object {
                "flex": 1,
              }
            }
          >
            <View
              collapsable={false}
              forwardedRef={[Function]}
              onGestureHandlerEvent={[Function]}
              onGestureHandlerStateChange={[Function]}
              style={
                Object {
                  "flex": 1,
                  "transform": Array [
                    Object {
                      "translateX": 0,
                    },
                    Object {
                      "translateX": 0,
                    },
                  ],
                }
              }
            >
              <View
                pointerEvents="none"
                style={
                  Object {
                    "backgroundColor": "rgb(242, 242, 242)",
                    "bottom": 0,
                    "left": 0,
                    "position": "absolute",
                    "shadowColor": "#000",
                    "shadowOffset": Object {
                      "height": 1,
                      "width": -1,
                    },
                    "shadowOpacity": 0.3,
                    "shadowRadius": 5,
                    "top": 0,
                    "width": 3,
                  }
                }
              />
              <View
                style={
                  Array [
                    Object {
                      "flex": 1,
                      "overflow": "hidden",
                    },
                    Array [
                      Object {
                        "backgroundColor": "rgb(242, 242, 242)",
                      },
                      undefined,
                    ],
                  ]
                }
              >
                <View
                  style={
                    Object {
                      "flex": 1,
                      "flexDirection": "column-reverse",
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "flex": 1,
                      }
                    }
                  >
                    <View
                      style={
                        Object {
                          "backgroundColor": "#1AD927",
                          "flex": 1,
                        }
                      }
                    >
                      <View
                        style={
                          Object {
                            "flex": 1,
                            "justifyContent": "center",
                            "paddingHorizontal": 20,
                          }
                        }
                      >
                        <Text
                          style={
                            Object {
                              "color": "#fff",
                              "fontFamily": "IRANSansWeb_Bold",
                              "fontSize": 20,
                              "textAlign": "center",
                              "writingDirection": "auto",
                            }
                          }
                        >
                          ویرایش اطلاعات
                        </Text>
                      </View>
                      <View
                        forwardedRef={[Function]}
                        style={
                          Object {
                            "backgroundColor": "#fff",
                            "borderTopLeftRadius": 20,
                            "borderTopRightRadius": 20,
                            "flex": 7,
                            "paddingHorizontal": 20,
                            "transform": Array [
                              Object {
                                "translateY": 100,
                              },
                            ],
                          }
                        }
                      >
                        <RCTScrollView
                          showsVerticalScrollIndicator={false}
                        >
                          <View>
                            <View
                              style={
                                Object {
                                  "marginTop": 15,
                                }
                              }
                            >
                              <Text
                                style={
                                  Object {
                                    "color": "#053751",
                                    "fontFamily": "IRANSansWeb_Bold",
                                    "fontSize": 12,
                                    "paddingRight": 3,
                                    "textAlign": "right",
                                  }
                                }
                              >
                                نام و نام خانوادگی
                              </Text>
                              <View
                                style={
                                  Object {
                                    "backgroundColor": "#f2f2f2",
                                    "borderColor": "#f2f2f2",
                                    "borderRadius": 10,
                                    "borderWidth": 1,
                                    "flexDirection": "row",
                                    "marginTop": 5,
                                    "paddingBottom": 5,
                                  }
                                }
                              >
                                <View
                                  accessible={true}
                                  focusable={true}
                                  onClick={[Function]}
                                  onResponderGrant={[Function]}
                                  onResponderMove={[Function]}
                                  onResponderRelease={[Function]}
                                  onResponderTerminate={[Function]}
                                  onResponderTerminationRequest={[Function]}
                                  onStartShouldSetResponder={[Function]}
                                  style={
                                    Object {
                                      "alignContent": "center",
                                      "alignSelf": "center",
                                      "flex": 1,
                                      "justifyContent": "center",
                                      "marginLeft": 15,
                                      "marginRight": 5,
                                      "marginTop": 4,
                                      "opacity": 1,
                                    }
                                  }
                                />
                                <View
                                  accessible={true}
                                  focusable={true}
                                  onClick={[Function]}
                                  onResponderGrant={[Function]}
                                  onResponderMove={[Function]}
                                  onResponderRelease={[Function]}
                                  onResponderTerminate={[Function]}
                                  onResponderTerminationRequest={[Function]}
                                  onStartShouldSetResponder={[Function]}
                                  style={
                                    Object {
                                      "alignContent": "center",
                                      "alignSelf": "center",
                                      "flex": 1,
                                      "justifyContent": "center",
                                      "marginLeft": 5,
                                      "marginRight": 8,
                                      "marginTop": 4,
                                      "opacity": 1,
                                    }
                                  }
                                />
                                <TextInput
                                  allowFontScaling={true}
                                  onChangeText={[Function]}
                                  rejectResponderTermination={true}
                                  style={
                                    Object {
                                      "color": "#053751",
                                      "flex": 10,
                                      "fontFamily": "Dirooz",
                                      "padding": 10,
                                      "textAlign": "right",
                                    }
                                  }
                                  underlineColorAndroid="transparent"
                                />
                              </View>
                            </View>
                            <View
                              style={
                                Object {
                                  "marginTop": 15,
                                }
                              }
                            >
                              <Text
                                style={
                                  Object {
                                    "color": "#053751",
                                    "fontFamily": "IRANSansWeb_Bold",
                                    "fontSize": 12,
                                    "paddingRight": 3,
                                    "textAlign": "right",
                                  }
                                }
                              >
                                رمز عبور فعلی
                              </Text>
                              <View
                                style={
                                  Object {
                                    "backgroundColor": "#f2f2f2",
                                    "borderColor": "#f2f2f2",
                                    "borderRadius": 10,
                                    "borderWidth": 1,
                                    "flexDirection": "row",
                                    "marginTop": 5,
                                    "paddingBottom": 5,
                                  }
                                }
                              >
                                <View
                                  accessible={true}
                                  focusable={true}
                                  onClick={[Function]}
                                  onResponderGrant={[Function]}
                                  onResponderMove={[Function]}
                                  onResponderRelease={[Function]}
                                  onResponderTerminate={[Function]}
                                  onResponderTerminationRequest={[Function]}
                                  onStartShouldSetResponder={[Function]}
                                  style={
                                    Object {
                                      "alignContent": "center",
                                      "alignSelf": "center",
                                      "flex": 1,
                                      "justifyContent": "center",
                                      "marginLeft": 15,
                                      "marginRight": 5,
                                      "marginTop": 4,
                                      "opacity": 1,
                                    }
                                  }
                                />
                                <View
                                  accessible={true}
                                  focusable={true}
                                  onClick={[Function]}
                                  onResponderGrant={[Function]}
                                  onResponderMove={[Function]}
                                  onResponderRelease={[Function]}
                                  onResponderTerminate={[Function]}
                                  onResponderTerminationRequest={[Function]}
                                  onStartShouldSetResponder={[Function]}
                                  style={
                                    Object {
                                      "alignContent": "center",
                                      "alignSelf": "center",
                                      "flex": 1,
                                      "justifyContent": "center",
                                      "marginLeft": 10,
                                      "marginRight": 5,
                                      "marginTop": 4,
                                      "opacity": 1,
                                    }
                                  }
                                />
                                <TextInput
                                  allowFontScaling={true}
                                  defaultValue=""
                                  onChangeText={[Function]}
                                  placeholder="رمز عبور فعلی"
                                  rejectResponderTermination={true}
                                  secureTextEntry={false}
                                  style={
                                    Object {
                                      "color": "#053751",
                                      "flex": 10,
                                      "fontFamily": "Dirooz",
                                      "padding": 10,
                                      "textAlign": "right",
                                    }
                                  }
                                  underlineColorAndroid="transparent"
                                />
                              </View>
                            </View>
                            <View
                              style={
                                Object {
                                  "marginTop": 15,
                                }
                              }
                            >
                              <Text
                                style={
                                  Object {
                                    "color": "#053751",
                                    "fontFamily": "IRANSansWeb_Bold",
                                    "fontSize": 12,
                                    "paddingRight": 3,
                                    "textAlign": "right",
                                  }
                                }
                              >
                                رمز عبور جدید
                              </Text>
                              <View
                                style={
                                  Object {
                                    "backgroundColor": "#f2f2f2",
                                    "borderColor": "#f2f2f2",
                                    "borderRadius": 10,
                                    "borderWidth": 1,
                                    "flexDirection": "row",
                                    "marginTop": 5,
                                    "paddingBottom": 5,
                                  }
                                }
                              >
                                <View
                                  accessible={true}
                                  focusable={true}
                                  onClick={[Function]}
                                  onResponderGrant={[Function]}
                                  onResponderMove={[Function]}
                                  onResponderRelease={[Function]}
                                  onResponderTerminate={[Function]}
                                  onResponderTerminationRequest={[Function]}
                                  onStartShouldSetResponder={[Function]}
                                  style={
                                    Object {
                                      "alignContent": "center",
                                      "alignSelf": "center",
                                      "flex": 1,
                                      "justifyContent": "center",
                                      "marginLeft": 15,
                                      "marginRight": 5,
                                      "marginTop": 4,
                                      "opacity": 1,
                                    }
                                  }
                                />
                                <View
                                  accessible={true}
                                  focusable={true}
                                  onClick={[Function]}
                                  onResponderGrant={[Function]}
                                  onResponderMove={[Function]}
                                  onResponderRelease={[Function]}
                                  onResponderTerminate={[Function]}
                                  onResponderTerminationRequest={[Function]}
                                  onStartShouldSetResponder={[Function]}
                                  style={
                                    Object {
                                      "alignContent": "center",
                                      "alignSelf": "center",
                                      "flex": 1,
                                      "justifyContent": "center",
                                      "marginLeft": 5,
                                      "marginRight": 8,
                                      "marginTop": 4,
                                      "opacity": 1,
                                    }
                                  }
                                />
                                <View
                                  accessible={true}
                                  focusable={true}
                                  onClick={[Function]}
                                  onResponderGrant={[Function]}
                                  onResponderMove={[Function]}
                                  onResponderRelease={[Function]}
                                  onResponderTerminate={[Function]}
                                  onResponderTerminationRequest={[Function]}
                                  onStartShouldSetResponder={[Function]}
                                  style={
                                    Object {
                                      "alignContent": "center",
                                      "alignSelf": "center",
                                      "flex": 1,
                                      "justifyContent": "center",
                                      "marginLeft": 10,
                                      "marginRight": 5,
                                      "marginTop": 4,
                                      "opacity": 1,
                                    }
                                  }
                                />
                                <TextInput
                                  allowFontScaling={true}
                                  defaultValue=""
                                  onChangeText={[Function]}
                                  placeholder="رمز عبور جدید"
                                  rejectResponderTermination={true}
                                  secureTextEntry={false}
                                  style={
                                    Object {
                                      "color": "#053751",
                                      "flex": 10,
                                      "fontFamily": "Dirooz",
                                      "padding": 10,
                                      "textAlign": "right",
                                    }
                                  }
                                  underlineColorAndroid="transparent"
                                />
                              </View>
                            </View>
                          </View>
                        </RCTScrollView>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
  </RNCSafeAreaProvider>
</View>
`;
